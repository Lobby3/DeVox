// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AvatarSet extends ethereum.Event {
  get params(): AvatarSet__Params {
    return new AvatarSet__Params(this);
  }
}

export class AvatarSet__Params {
  _event: AvatarSet;

  constructor(event: AvatarSet) {
    this._event = event;
  }

  get previousAvatar(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAvatar(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CancelProposal extends ethereum.Event {
  get params(): CancelProposal__Params {
    return new CancelProposal__Params(this);
  }
}

export class CancelProposal__Params {
  _event: CancelProposal;

  constructor(event: CancelProposal) {
    this._event = event;
  }

  get proposal(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangedGuard extends ethereum.Event {
  get params(): ChangedGuard__Params {
    return new ChangedGuard__Params(this);
  }
}

export class ChangedGuard__Params {
  _event: ChangedGuard;

  constructor(event: ChangedGuard) {
    this._event = event;
  }

  get guard(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EIP712DomainChanged extends ethereum.Event {
  get params(): EIP712DomainChanged__Params {
    return new EIP712DomainChanged__Params(this);
  }
}

export class EIP712DomainChanged__Params {
  _event: EIP712DomainChanged;

  constructor(event: EIP712DomainChanged) {
    this._event = event;
  }
}

export class GovernanceConfigSet extends ethereum.Event {
  get params(): GovernanceConfigSet__Params {
    return new GovernanceConfigSet__Params(this);
  }
}

export class GovernanceConfigSet__Params {
  _event: GovernanceConfigSet;

  constructor(event: GovernanceConfigSet) {
    this._event = event;
  }

  get voting(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get grace(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newOffering(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get quorum(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sponsor(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get minRetention(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LockAdmin extends ethereum.Event {
  get params(): LockAdmin__Params {
    return new LockAdmin__Params(this);
  }
}

export class LockAdmin__Params {
  _event: LockAdmin;

  constructor(event: LockAdmin) {
    this._event = event;
  }

  get adminLock(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class LockGovernor extends ethereum.Event {
  get params(): LockGovernor__Params {
    return new LockGovernor__Params(this);
  }
}

export class LockGovernor__Params {
  _event: LockGovernor;

  constructor(event: LockGovernor) {
    this._event = event;
  }

  get governorLock(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class LockManager extends ethereum.Event {
  get params(): LockManager__Params {
    return new LockManager__Params(this);
  }
}

export class LockManager__Params {
  _event: LockManager;

  constructor(event: LockManager) {
    this._event = event;
  }

  get managerLock(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class LootPaused extends ethereum.Event {
  get params(): LootPaused__Params {
    return new LootPaused__Params(this);
  }
}

export class LootPaused__Params {
  _event: LootPaused;

  constructor(event: LootPaused) {
    this._event = event;
  }

  get paused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProcessProposal extends ethereum.Event {
  get params(): ProcessProposal__Params {
    return new ProcessProposal__Params(this);
  }
}

export class ProcessProposal__Params {
  _event: ProcessProposal;

  constructor(event: ProcessProposal) {
    this._event = event;
  }

  get proposal(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get passed(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get actionFailed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Ragequit extends ethereum.Event {
  get params(): Ragequit__Params {
    return new Ragequit__Params(this);
  }
}

export class Ragequit__Params {
  _event: Ragequit;

  constructor(event: Ragequit) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lootToBurn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sharesToBurn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }
}

export class SetTrustedForwarder extends ethereum.Event {
  get params(): SetTrustedForwarder__Params {
    return new SetTrustedForwarder__Params(this);
  }
}

export class SetTrustedForwarder__Params {
  _event: SetTrustedForwarder;

  constructor(event: SetTrustedForwarder) {
    this._event = event;
  }

  get forwarder(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetupComplete extends ethereum.Event {
  get params(): SetupComplete__Params {
    return new SetupComplete__Params(this);
  }
}

export class SetupComplete__Params {
  _event: SetupComplete;

  constructor(event: SetupComplete) {
    this._event = event;
  }

  get lootPaused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get sharesPaused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get gracePeriod(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get votingPeriod(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get proposalOffering(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get quorumPercent(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get sponsorThreshold(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get minRetentionPercent(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[8].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[9].value.toString();
  }

  get totalShares(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get totalLoot(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class ShamanSet extends ethereum.Event {
  get params(): ShamanSet__Params {
    return new ShamanSet__Params(this);
  }
}

export class ShamanSet__Params {
  _event: ShamanSet;

  constructor(event: ShamanSet) {
    this._event = event;
  }

  get shaman(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permission(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SharesPaused extends ethereum.Event {
  get params(): SharesPaused__Params {
    return new SharesPaused__Params(this);
  }
}

export class SharesPaused__Params {
  _event: SharesPaused;

  constructor(event: SharesPaused) {
    this._event = event;
  }

  get paused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class SponsorProposal extends ethereum.Event {
  get params(): SponsorProposal__Params {
    return new SponsorProposal__Params(this);
  }
}

export class SponsorProposal__Params {
  _event: SponsorProposal;

  constructor(event: SponsorProposal) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposal(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get votingStarts(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubmitProposal extends ethereum.Event {
  get params(): SubmitProposal__Params {
    return new SubmitProposal__Params(this);
  }
}

export class SubmitProposal__Params {
  _event: SubmitProposal;

  constructor(event: SubmitProposal) {
    this._event = event;
  }

  get proposal(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposalDataHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get votingPeriod(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get expiration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get baalGas(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get selfSponsor(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get details(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class SubmitVote extends ethereum.Event {
  get params(): SubmitVote__Params {
    return new SubmitVote__Params(this);
  }
}

export class SubmitVote__Params {
  _event: SubmitVote;

  constructor(event: SubmitVote) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proposal(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get approved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class TargetSet extends ethereum.Event {
  get params(): TargetSet__Params {
    return new TargetSet__Params(this);
  }
}

export class TargetSet__Params {
  _event: TargetSet;

  constructor(event: TargetSet) {
    this._event = event;
  }

  get previousTarget(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTarget(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BaalV1__eip712DomainResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: Array<BigInt>;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  getFields(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getVersion(): string {
    return this.value2;
  }

  getChainId(): BigInt {
    return this.value3;
  }

  getVerifyingContract(): Address {
    return this.value4;
  }

  getSalt(): Bytes {
    return this.value5;
  }

  getExtensions(): Array<BigInt> {
    return this.value6;
  }
}

export class BaalV1__proposalsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: Address;
  value12: Bytes;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: Address,
    value12: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromAddress(this.value11));
    map.set("value12", ethereum.Value.fromFixedBytes(this.value12));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getPrevProposalId(): BigInt {
    return this.value1;
  }

  getVotingStarts(): BigInt {
    return this.value2;
  }

  getVotingEnds(): BigInt {
    return this.value3;
  }

  getGraceEnds(): BigInt {
    return this.value4;
  }

  getExpiration(): BigInt {
    return this.value5;
  }

  getBaalGas(): BigInt {
    return this.value6;
  }

  getYesVotes(): BigInt {
    return this.value7;
  }

  getNoVotes(): BigInt {
    return this.value8;
  }

  getMaxTotalSharesAndLootAtVote(): BigInt {
    return this.value9;
  }

  getMaxTotalSharesAtSponsor(): BigInt {
    return this.value10;
  }

  getSponsor(): Address {
    return this.value11;
  }

  getProposalDataHash(): Bytes {
    return this.value12;
  }
}

export class BaalV1 extends ethereum.SmartContract {
  static bind(address: Address): BaalV1 {
    return new BaalV1("BaalV1", address);
  }

  adminLock(): boolean {
    let result = super.call("adminLock", "adminLock():(bool)", []);

    return result[0].toBoolean();
  }

  try_adminLock(): ethereum.CallResult<boolean> {
    let result = super.tryCall("adminLock", "adminLock():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  avatar(): Address {
    let result = super.call("avatar", "avatar():(address)", []);

    return result[0].toAddress();
  }

  try_avatar(): ethereum.CallResult<Address> {
    let result = super.tryCall("avatar", "avatar():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  eip712Domain(): BaalV1__eip712DomainResult {
    let result = super.call(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      []
    );

    return new BaalV1__eip712DomainResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigIntArray()
    );
  }

  try_eip712Domain(): ethereum.CallResult<BaalV1__eip712DomainResult> {
    let result = super.tryCall(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BaalV1__eip712DomainResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBytes(),
        value[6].toBigIntArray()
      )
    );
  }

  encodeMultisend(_calls: Array<Bytes>, _target: Address): Bytes {
    let result = super.call(
      "encodeMultisend",
      "encodeMultisend(bytes[],address):(bytes)",
      [
        ethereum.Value.fromBytesArray(_calls),
        ethereum.Value.fromAddress(_target)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeMultisend(
    _calls: Array<Bytes>,
    _target: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "encodeMultisend",
      "encodeMultisend(bytes[],address):(bytes)",
      [
        ethereum.Value.fromBytesArray(_calls),
        ethereum.Value.fromAddress(_target)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getGuard(): Address {
    let result = super.call("getGuard", "getGuard():(address)", []);

    return result[0].toAddress();
  }

  try_getGuard(): ethereum.CallResult<Address> {
    let result = super.tryCall("getGuard", "getGuard():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getProposalStatus(id: BigInt): Array<boolean> {
    let result = super.call(
      "getProposalStatus",
      "getProposalStatus(uint32):(bool[4])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toBooleanArray();
  }

  try_getProposalStatus(id: BigInt): ethereum.CallResult<Array<boolean>> {
    let result = super.tryCall(
      "getProposalStatus",
      "getProposalStatus(uint32):(bool[4])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBooleanArray());
  }

  governorLock(): boolean {
    let result = super.call("governorLock", "governorLock():(bool)", []);

    return result[0].toBoolean();
  }

  try_governorLock(): ethereum.CallResult<boolean> {
    let result = super.tryCall("governorLock", "governorLock():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  gracePeriod(): BigInt {
    let result = super.call("gracePeriod", "gracePeriod():(uint32)", []);

    return result[0].toBigInt();
  }

  try_gracePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gracePeriod", "gracePeriod():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  guard(): Address {
    let result = super.call("guard", "guard():(address)", []);

    return result[0].toAddress();
  }

  try_guard(): ethereum.CallResult<Address> {
    let result = super.tryCall("guard", "guard():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hashOperation(_transactions: Bytes): Bytes {
    let result = super.call("hashOperation", "hashOperation(bytes):(bytes32)", [
      ethereum.Value.fromBytes(_transactions)
    ]);

    return result[0].toBytes();
  }

  try_hashOperation(_transactions: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "hashOperation",
      "hashOperation(bytes):(bytes32)",
      [ethereum.Value.fromBytes(_transactions)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isAdmin(shaman: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(shaman: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isGovernor(shaman: Address): boolean {
    let result = super.call("isGovernor", "isGovernor(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);

    return result[0].toBoolean();
  }

  try_isGovernor(shaman: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isGovernor", "isGovernor(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isManager(shaman: Address): boolean {
    let result = super.call("isManager", "isManager(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);

    return result[0].toBoolean();
  }

  try_isManager(shaman: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isManager", "isManager(address):(bool)", [
      ethereum.Value.fromAddress(shaman)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  latestSponsoredProposalId(): BigInt {
    let result = super.call(
      "latestSponsoredProposalId",
      "latestSponsoredProposalId():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_latestSponsoredProposalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestSponsoredProposalId",
      "latestSponsoredProposalId():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lootToken(): Address {
    let result = super.call("lootToken", "lootToken():(address)", []);

    return result[0].toAddress();
  }

  try_lootToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("lootToken", "lootToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  managerLock(): boolean {
    let result = super.call("managerLock", "managerLock():(bool)", []);

    return result[0].toBoolean();
  }

  try_managerLock(): ethereum.CallResult<boolean> {
    let result = super.tryCall("managerLock", "managerLock():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  memberVoted(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "memberVoted",
      "memberVoted(address,uint32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_memberVoted(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "memberVoted",
      "memberVoted(address,uint32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minRetentionPercent(): BigInt {
    let result = super.call(
      "minRetentionPercent",
      "minRetentionPercent():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minRetentionPercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minRetentionPercent",
      "minRetentionPercent():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  multisendLibrary(): Address {
    let result = super.call(
      "multisendLibrary",
      "multisendLibrary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_multisendLibrary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "multisendLibrary",
      "multisendLibrary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalCount(): BigInt {
    let result = super.call("proposalCount", "proposalCount():(uint32)", []);

    return result[0].toBigInt();
  }

  try_proposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("proposalCount", "proposalCount():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalOffering(): BigInt {
    let result = super.call(
      "proposalOffering",
      "proposalOffering():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalOffering(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalOffering",
      "proposalOffering():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(param0: BigInt): BaalV1__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(uint32,uint32,uint32,uint32,uint32,uint32,uint256,uint256,uint256,uint256,uint256,address,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new BaalV1__proposalsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toAddress(),
      result[12].toBytes()
    );
  }

  try_proposals(param0: BigInt): ethereum.CallResult<BaalV1__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(uint32,uint32,uint32,uint32,uint32,uint32,uint256,uint256,uint256,uint256,uint256,address,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BaalV1__proposalsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toAddress(),
        value[12].toBytes()
      )
    );
  }

  quorumPercent(): BigInt {
    let result = super.call("quorumPercent", "quorumPercent():(uint256)", []);

    return result[0].toBigInt();
  }

  try_quorumPercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quorumPercent",
      "quorumPercent():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  shamans(param0: Address): BigInt {
    let result = super.call("shamans", "shamans(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_shamans(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("shamans", "shamans(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sharesToken(): Address {
    let result = super.call("sharesToken", "sharesToken():(address)", []);

    return result[0].toAddress();
  }

  try_sharesToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("sharesToken", "sharesToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sponsorThreshold(): BigInt {
    let result = super.call(
      "sponsorThreshold",
      "sponsorThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sponsorThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sponsorThreshold",
      "sponsorThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  state(id: BigInt): i32 {
    let result = super.call("state", "state(uint32):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toI32();
  }

  try_state(id: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state(uint32):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  target(): Address {
    let result = super.call("target", "target():(address)", []);

    return result[0].toAddress();
  }

  try_target(): ethereum.CallResult<Address> {
    let result = super.tryCall("target", "target():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalLoot(): BigInt {
    let result = super.call("totalLoot", "totalLoot():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalLoot(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalLoot", "totalLoot():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalShares(): BigInt {
    let result = super.call("totalShares", "totalShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalShares", "totalShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  votingNonces(param0: Address): BigInt {
    let result = super.call("votingNonces", "votingNonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_votingNonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "votingNonces",
      "votingNonces(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingPeriod(): BigInt {
    let result = super.call("votingPeriod", "votingPeriod():(uint32)", []);

    return result[0].toBigInt();
  }

  try_votingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingPeriod", "votingPeriod():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BurnLootCall extends ethereum.Call {
  get inputs(): BurnLootCall__Inputs {
    return new BurnLootCall__Inputs(this);
  }

  get outputs(): BurnLootCall__Outputs {
    return new BurnLootCall__Outputs(this);
  }
}

export class BurnLootCall__Inputs {
  _call: BurnLootCall;

  constructor(call: BurnLootCall) {
    this._call = call;
  }

  get from(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BurnLootCall__Outputs {
  _call: BurnLootCall;

  constructor(call: BurnLootCall) {
    this._call = call;
  }
}

export class BurnSharesCall extends ethereum.Call {
  get inputs(): BurnSharesCall__Inputs {
    return new BurnSharesCall__Inputs(this);
  }

  get outputs(): BurnSharesCall__Outputs {
    return new BurnSharesCall__Outputs(this);
  }
}

export class BurnSharesCall__Inputs {
  _call: BurnSharesCall;

  constructor(call: BurnSharesCall) {
    this._call = call;
  }

  get from(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BurnSharesCall__Outputs {
  _call: BurnSharesCall;

  constructor(call: BurnSharesCall) {
    this._call = call;
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class ExecuteAsBaalCall extends ethereum.Call {
  get inputs(): ExecuteAsBaalCall__Inputs {
    return new ExecuteAsBaalCall__Inputs(this);
  }

  get outputs(): ExecuteAsBaalCall__Outputs {
    return new ExecuteAsBaalCall__Outputs(this);
  }
}

export class ExecuteAsBaalCall__Inputs {
  _call: ExecuteAsBaalCall;

  constructor(call: ExecuteAsBaalCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ExecuteAsBaalCall__Outputs {
  _call: ExecuteAsBaalCall;

  constructor(call: ExecuteAsBaalCall) {
    this._call = call;
  }
}

export class LockAdminCall extends ethereum.Call {
  get inputs(): LockAdminCall__Inputs {
    return new LockAdminCall__Inputs(this);
  }

  get outputs(): LockAdminCall__Outputs {
    return new LockAdminCall__Outputs(this);
  }
}

export class LockAdminCall__Inputs {
  _call: LockAdminCall;

  constructor(call: LockAdminCall) {
    this._call = call;
  }
}

export class LockAdminCall__Outputs {
  _call: LockAdminCall;

  constructor(call: LockAdminCall) {
    this._call = call;
  }
}

export class LockGovernorCall extends ethereum.Call {
  get inputs(): LockGovernorCall__Inputs {
    return new LockGovernorCall__Inputs(this);
  }

  get outputs(): LockGovernorCall__Outputs {
    return new LockGovernorCall__Outputs(this);
  }
}

export class LockGovernorCall__Inputs {
  _call: LockGovernorCall;

  constructor(call: LockGovernorCall) {
    this._call = call;
  }
}

export class LockGovernorCall__Outputs {
  _call: LockGovernorCall;

  constructor(call: LockGovernorCall) {
    this._call = call;
  }
}

export class LockManagerCall extends ethereum.Call {
  get inputs(): LockManagerCall__Inputs {
    return new LockManagerCall__Inputs(this);
  }

  get outputs(): LockManagerCall__Outputs {
    return new LockManagerCall__Outputs(this);
  }
}

export class LockManagerCall__Inputs {
  _call: LockManagerCall;

  constructor(call: LockManagerCall) {
    this._call = call;
  }
}

export class LockManagerCall__Outputs {
  _call: LockManagerCall;

  constructor(call: LockManagerCall) {
    this._call = call;
  }
}

export class MintLootCall extends ethereum.Call {
  get inputs(): MintLootCall__Inputs {
    return new MintLootCall__Inputs(this);
  }

  get outputs(): MintLootCall__Outputs {
    return new MintLootCall__Outputs(this);
  }
}

export class MintLootCall__Inputs {
  _call: MintLootCall;

  constructor(call: MintLootCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class MintLootCall__Outputs {
  _call: MintLootCall;

  constructor(call: MintLootCall) {
    this._call = call;
  }
}

export class MintSharesCall extends ethereum.Call {
  get inputs(): MintSharesCall__Inputs {
    return new MintSharesCall__Inputs(this);
  }

  get outputs(): MintSharesCall__Outputs {
    return new MintSharesCall__Outputs(this);
  }
}

export class MintSharesCall__Inputs {
  _call: MintSharesCall;

  constructor(call: MintSharesCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class MintSharesCall__Outputs {
  _call: MintSharesCall;

  constructor(call: MintSharesCall) {
    this._call = call;
  }
}

export class ProcessProposalCall extends ethereum.Call {
  get inputs(): ProcessProposalCall__Inputs {
    return new ProcessProposalCall__Inputs(this);
  }

  get outputs(): ProcessProposalCall__Outputs {
    return new ProcessProposalCall__Outputs(this);
  }
}

export class ProcessProposalCall__Inputs {
  _call: ProcessProposalCall;

  constructor(call: ProcessProposalCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposalData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ProcessProposalCall__Outputs {
  _call: ProcessProposalCall;

  constructor(call: ProcessProposalCall) {
    this._call = call;
  }
}

export class RagequitCall extends ethereum.Call {
  get inputs(): RagequitCall__Inputs {
    return new RagequitCall__Inputs(this);
  }

  get outputs(): RagequitCall__Outputs {
    return new RagequitCall__Outputs(this);
  }
}

export class RagequitCall__Inputs {
  _call: RagequitCall;

  constructor(call: RagequitCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sharesToBurn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get lootToBurn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class RagequitCall__Outputs {
  _call: RagequitCall;

  constructor(call: RagequitCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAdminConfigCall extends ethereum.Call {
  get inputs(): SetAdminConfigCall__Inputs {
    return new SetAdminConfigCall__Inputs(this);
  }

  get outputs(): SetAdminConfigCall__Outputs {
    return new SetAdminConfigCall__Outputs(this);
  }
}

export class SetAdminConfigCall__Inputs {
  _call: SetAdminConfigCall;

  constructor(call: SetAdminConfigCall) {
    this._call = call;
  }

  get pauseShares(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get pauseLoot(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAdminConfigCall__Outputs {
  _call: SetAdminConfigCall;

  constructor(call: SetAdminConfigCall) {
    this._call = call;
  }
}

export class SetAvatarCall extends ethereum.Call {
  get inputs(): SetAvatarCall__Inputs {
    return new SetAvatarCall__Inputs(this);
  }

  get outputs(): SetAvatarCall__Outputs {
    return new SetAvatarCall__Outputs(this);
  }
}

export class SetAvatarCall__Inputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }

  get _avatar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAvatarCall__Outputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }
}

export class SetGovernanceConfigCall extends ethereum.Call {
  get inputs(): SetGovernanceConfigCall__Inputs {
    return new SetGovernanceConfigCall__Inputs(this);
  }

  get outputs(): SetGovernanceConfigCall__Outputs {
    return new SetGovernanceConfigCall__Outputs(this);
  }
}

export class SetGovernanceConfigCall__Inputs {
  _call: SetGovernanceConfigCall;

  constructor(call: SetGovernanceConfigCall) {
    this._call = call;
  }

  get _governanceConfig(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetGovernanceConfigCall__Outputs {
  _call: SetGovernanceConfigCall;

  constructor(call: SetGovernanceConfigCall) {
    this._call = call;
  }
}

export class SetGuardCall extends ethereum.Call {
  get inputs(): SetGuardCall__Inputs {
    return new SetGuardCall__Inputs(this);
  }

  get outputs(): SetGuardCall__Outputs {
    return new SetGuardCall__Outputs(this);
  }
}

export class SetGuardCall__Inputs {
  _call: SetGuardCall;

  constructor(call: SetGuardCall) {
    this._call = call;
  }

  get _guard(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGuardCall__Outputs {
  _call: SetGuardCall;

  constructor(call: SetGuardCall) {
    this._call = call;
  }
}

export class SetShamansCall extends ethereum.Call {
  get inputs(): SetShamansCall__Inputs {
    return new SetShamansCall__Inputs(this);
  }

  get outputs(): SetShamansCall__Outputs {
    return new SetShamansCall__Outputs(this);
  }
}

export class SetShamansCall__Inputs {
  _call: SetShamansCall;

  constructor(call: SetShamansCall) {
    this._call = call;
  }

  get _shamans(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _permissions(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetShamansCall__Outputs {
  _call: SetShamansCall;

  constructor(call: SetShamansCall) {
    this._call = call;
  }
}

export class SetTargetCall extends ethereum.Call {
  get inputs(): SetTargetCall__Inputs {
    return new SetTargetCall__Inputs(this);
  }

  get outputs(): SetTargetCall__Outputs {
    return new SetTargetCall__Outputs(this);
  }
}

export class SetTargetCall__Inputs {
  _call: SetTargetCall;

  constructor(call: SetTargetCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTargetCall__Outputs {
  _call: SetTargetCall;

  constructor(call: SetTargetCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _trustedForwarderAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SetUpCall extends ethereum.Call {
  get inputs(): SetUpCall__Inputs {
    return new SetUpCall__Inputs(this);
  }

  get outputs(): SetUpCall__Outputs {
    return new SetUpCall__Outputs(this);
  }
}

export class SetUpCall__Inputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }

  get _initializationParams(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetUpCall__Outputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }
}

export class SponsorProposalCall extends ethereum.Call {
  get inputs(): SponsorProposalCall__Inputs {
    return new SponsorProposalCall__Inputs(this);
  }

  get outputs(): SponsorProposalCall__Outputs {
    return new SponsorProposalCall__Outputs(this);
  }
}

export class SponsorProposalCall__Inputs {
  _call: SponsorProposalCall;

  constructor(call: SponsorProposalCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SponsorProposalCall__Outputs {
  _call: SponsorProposalCall;

  constructor(call: SponsorProposalCall) {
    this._call = call;
  }
}

export class SubmitProposalCall extends ethereum.Call {
  get inputs(): SubmitProposalCall__Inputs {
    return new SubmitProposalCall__Inputs(this);
  }

  get outputs(): SubmitProposalCall__Outputs {
    return new SubmitProposalCall__Outputs(this);
  }
}

export class SubmitProposalCall__Inputs {
  _call: SubmitProposalCall;

  constructor(call: SubmitProposalCall) {
    this._call = call;
  }

  get proposalData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get expiration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get baalGas(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get details(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class SubmitProposalCall__Outputs {
  _call: SubmitProposalCall;

  constructor(call: SubmitProposalCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SubmitVoteCall extends ethereum.Call {
  get inputs(): SubmitVoteCall__Inputs {
    return new SubmitVoteCall__Inputs(this);
  }

  get outputs(): SubmitVoteCall__Outputs {
    return new SubmitVoteCall__Outputs(this);
  }
}

export class SubmitVoteCall__Inputs {
  _call: SubmitVoteCall;

  constructor(call: SubmitVoteCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SubmitVoteCall__Outputs {
  _call: SubmitVoteCall;

  constructor(call: SubmitVoteCall) {
    this._call = call;
  }
}

export class SubmitVoteWithSigCall extends ethereum.Call {
  get inputs(): SubmitVoteWithSigCall__Inputs {
    return new SubmitVoteWithSigCall__Inputs(this);
  }

  get outputs(): SubmitVoteWithSigCall__Outputs {
    return new SubmitVoteWithSigCall__Outputs(this);
  }
}

export class SubmitVoteWithSigCall__Inputs {
  _call: SubmitVoteWithSigCall;

  constructor(call: SubmitVoteWithSigCall) {
    this._call = call;
  }

  get voter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get id(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get approved(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class SubmitVoteWithSigCall__Outputs {
  _call: SubmitVoteWithSigCall;

  constructor(call: SubmitVoteWithSigCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
