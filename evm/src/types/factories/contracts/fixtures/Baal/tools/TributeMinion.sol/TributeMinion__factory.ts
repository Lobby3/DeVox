/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  TributeMinion,
  TributeMinionInterface,
} from "../../../../../../contracts/fixtures/Baal/tools/TributeMinion.sol/TributeMinion";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "applicant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EscrowReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "TributeProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "escrow",
        type: "address",
      },
    ],
    name: "encodeTributeProposal",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrows",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "released",
        type: "bool",
      },
      {
        internalType: "address",
        name: "safe",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baal",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_proposalId",
        type: "uint32",
      },
    ],
    name: "releaseEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Baal",
        name: "baal",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loot",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "expiration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "baalgas",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "details",
        type: "string",
      },
    ],
    name: "submitTributeProposal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c42806100206000396000f3fe60806040526004361061003f5760003560e01c806304a54aa7146100445780633336c27914610085578063610ac73d146100ae5780636bd4afe7146100ca575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610e04565b610107565b60405161007c959493929190610e7d565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610f0c565b6101b7565b005b6100c860048036038101906100c391906110d0565b610536565b005b3480156100d657600080fd5b506100f160048036038101906100ec91906111a2565b6108dc565b6040516100fe91906112b7565b60405180910390f35b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b600082905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1615610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90611336565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16634630affc856040518263ffffffff1660e01b81526004016102a29190611365565b608060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190611462565b9050806002600481106102f9576102f861148f565b5b602002015161033d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103349061150a565b60405180910390fd5b60018260030160006101000a81548160ff02191690831515021790555060008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508573ffffffffffffffffffffffffffffffffffffffff167f637fb12bbeb9000df3de89d3f54dba04a8940ff0b762f16937aa1bc12dfc2677868560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876002015460405161041b949392919061152a565b60405180910390a28073ffffffffffffffffffffffffffffffffffffffff166323b872dd8460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600201546040518463ffffffff1660e01b81526004016104ac9392919061156f565b6020604051808303816000875af11580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef91906115a6565b61052e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105259061161f565b60405180910390fd5b505050505050565b600060018973ffffffffffffffffffffffffffffffffffffffff1663da35c6646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190611654565b6105b391906116b0565b905060006105c58a88883386306108dc565b90506040518060a001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020016000151581526020018b73ffffffffffffffffffffffffffffffffffffffff1663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068891906116ff565b73ffffffffffffffffffffffffffffffffffffffff168152506000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008463ffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508973ffffffffffffffffffffffffffffffffffffffff16633a82ffc834838888886040518663ffffffff1660e01b81526004016108389493929190611770565b60206040518083038185885af1158015610856573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087b91906117d8565b508973ffffffffffffffffffffffffffffffffffffffff167f1deb8b1e22941ec32a7ed14b2d25bdb44593ab343156feb1c735ec06696221398a8a33866040516108c89493929190611840565b60405180910390a250505050505050505050565b60606000600167ffffffffffffffff8111156108fb576108fa610fa5565b5b6040519080825280602002602001820160405280156109295781602001602082028036833780820191505090505b50905084816000815181106109415761094061148f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008885604051602401610990929190611885565b6040516020818303038152906040527f3336c279000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600080856000845185604051602001610a2c959493929190611996565b60405160208183030381529060405290506000891115610b7b576000600167ffffffffffffffff811115610a6357610a62610fa5565b5b604051908082528060200260200182016040528015610a915781602001602082028036833780820191505090505b5090508981600081518110610aa957610aa861148f565b5b60200260200101818152505060008482604051602401610aca929190611b6d565b6040516020818303038152906040527fb1e3f40c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508260008d6000845185604051602001610b6796959493929190611ba4565b604051602081830303815290604052925050505b6000881115610cb9576000600167ffffffffffffffff811115610ba157610ba0610fa5565b5b604051908082528060200260200182016040528015610bcf5781602001602082028036833780820191505090505b5090508881600081518110610be757610be661148f565b5b60200260200101818152505060008482604051602401610c08929190611b6d565b6040516020818303038152906040527f4526d846000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508260008d6000845185604051602001610ca596959493929190611ba4565b604051602081830303815290604052925050505b600081604051602401610ccc91906112b7565b6040516020818303038152906040527f8d80ff0a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050809450505050509695505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d9b82610d70565b9050919050565b610dab81610d90565b8114610db657600080fd5b50565b600081359050610dc881610da2565b92915050565b6000819050919050565b610de181610dce565b8114610dec57600080fd5b50565b600081359050610dfe81610dd8565b92915050565b60008060408385031215610e1b57610e1a610d66565b5b6000610e2985828601610db9565b9250506020610e3a85828601610def565b9150509250929050565b610e4d81610d90565b82525050565b610e5c81610dce565b82525050565b60008115159050919050565b610e7781610e62565b82525050565b600060a082019050610e926000830188610e44565b610e9f6020830187610e44565b610eac6040830186610e53565b610eb96060830185610e6e565b610ec66080830184610e44565b9695505050505050565b600063ffffffff82169050919050565b610ee981610ed0565b8114610ef457600080fd5b50565b600081359050610f0681610ee0565b92915050565b60008060408385031215610f2357610f22610d66565b5b6000610f3185828601610db9565b9250506020610f4285828601610ef7565b9150509250929050565b6000610f5782610d90565b9050919050565b610f6781610f4c565b8114610f7257600080fd5b50565b600081359050610f8481610f5e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fdd82610f94565b810181811067ffffffffffffffff82111715610ffc57610ffb610fa5565b5b80604052505050565b600061100f610d5c565b905061101b8282610fd4565b919050565b600067ffffffffffffffff82111561103b5761103a610fa5565b5b61104482610f94565b9050602081019050919050565b82818337600083830152505050565b600061107361106e84611020565b611005565b90508281526020810184848401111561108f5761108e610f8f565b5b61109a848285611051565b509392505050565b600082601f8301126110b7576110b6610f8a565b5b81356110c7848260208601611060565b91505092915050565b600080600080600080600080610100898b0312156110f1576110f0610d66565b5b60006110ff8b828c01610f75565b98505060206111108b828c01610db9565b97505060406111218b828c01610def565b96505060606111328b828c01610def565b95505060806111438b828c01610def565b94505060a06111548b828c01610ef7565b93505060c06111658b828c01610def565b92505060e089013567ffffffffffffffff81111561118657611185610d6b565b5b6111928b828c016110a2565b9150509295985092959890939650565b60008060008060008060c087890312156111bf576111be610d66565b5b60006111cd89828a01610db9565b96505060206111de89828a01610def565b95505060406111ef89828a01610def565b945050606061120089828a01610db9565b935050608061121189828a01610ef7565b92505060a061122289828a01610db9565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b8381101561126957808201518184015260208101905061124e565b83811115611278576000848401525b50505050565b60006112898261122f565b611293818561123a565b93506112a381856020860161124b565b6112ac81610f94565b840191505092915050565b600060208201905081810360008301526112d1818461127e565b905092915050565b600082825260208201905092915050565b7f416c72656164792072656c656173656400000000000000000000000000000000600082015250565b60006113206010836112d9565b915061132b826112ea565b602082019050919050565b6000602082019050818103600083015261134f81611313565b9050919050565b61135f81610ed0565b82525050565b600060208201905061137a6000830184611356565b92915050565b600067ffffffffffffffff82111561139b5761139a610fa5565b5b602082029050919050565b600080fd5b6113b481610e62565b81146113bf57600080fd5b50565b6000815190506113d1816113ab565b92915050565b60006113ea6113e584611380565b611005565b90508060208402830185811115611404576114036113a6565b5b835b8181101561142d578061141988826113c2565b845260208401935050602081019050611406565b5050509392505050565b600082601f83011261144c5761144b610f8a565b5b60046114598482856113d7565b91505092915050565b60006080828403121561147857611477610d66565b5b600061148684828501611437565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f742070617373656400000000000000000000000000000000000000000000600082015250565b60006114f4600a836112d9565b91506114ff826114be565b602082019050919050565b60006020820190508181036000830152611523816114e7565b9050919050565b600060808201905061153f6000830187611356565b61154c6020830186610e44565b6115596040830185610e44565b6115666060830184610e53565b95945050505050565b60006060820190506115846000830186610e44565b6115916020830185610e44565b61159e6040830184610e53565b949350505050565b6000602082840312156115bc576115bb610d66565b5b60006115ca848285016113c2565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611609600f836112d9565b9150611614826115d3565b602082019050919050565b60006020820190508181036000830152611638816115fc565b9050919050565b60008151905061164e81610ee0565b92915050565b60006020828403121561166a57611669610d66565b5b60006116788482850161163f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116bb82610ed0565b91506116c683610ed0565b92508263ffffffff038211156116df576116de611681565b5b828201905092915050565b6000815190506116f981610da2565b92915050565b60006020828403121561171557611714610d66565b5b6000611723848285016116ea565b91505092915050565b600081519050919050565b60006117428261172c565b61174c81856112d9565b935061175c81856020860161124b565b61176581610f94565b840191505092915050565b6000608082019050818103600083015261178a818761127e565b90506117996020830186611356565b6117a66040830185610e53565b81810360608301526117b88184611737565b905095945050505050565b6000815190506117d281610dd8565b92915050565b6000602082840312156117ee576117ed610d66565b5b60006117fc848285016117c3565b91505092915050565b6000819050919050565b600061182a61182561182084610ed0565b611805565b610dce565b9050919050565b61183a8161180f565b82525050565b60006080820190506118556000830187610e44565b6118626020830186610e53565b61186f6040830185610e44565b61187c6060830184611831565b95945050505050565b600060408201905061189a6000830185610e44565b6118a76020830184611356565b9392505050565b600060ff82169050919050565b60008160f81b9050919050565b60006118d3826118bb565b9050919050565b6118eb6118e6826118ae565b6118c8565b82525050565b60008160601b9050919050565b6000611909826118f1565b9050919050565b600061191b826118fe565b9050919050565b61193361192e82610d90565b611910565b82525050565b6000819050919050565b61195461194f82610dce565b611939565b82525050565b600081905092915050565b60006119708261122f565b61197a818561195a565b935061198a81856020860161124b565b80840191505092915050565b60006119a282886118da565b6001820191506119b28287611922565b6014820191506119c28286611943565b6020820191506119d28285611943565b6020820191506119e28284611965565b91508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a2681610d90565b82525050565b6000611a388383611a1d565b60208301905092915050565b6000602082019050919050565b6000611a5c826119f1565b611a6681856119fc565b9350611a7183611a0d565b8060005b83811015611aa2578151611a898882611a2c565b9750611a9483611a44565b925050600181019050611a75565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ae481610dce565b82525050565b6000611af68383611adb565b60208301905092915050565b6000602082019050919050565b6000611b1a82611aaf565b611b248185611aba565b9350611b2f83611acb565b8060005b83811015611b60578151611b478882611aea565b9750611b5283611b02565b925050600181019050611b33565b5085935050505092915050565b60006040820190508181036000830152611b878185611a51565b90508181036020830152611b9b8184611b0f565b90509392505050565b6000611bb08289611965565b9150611bbc82886118da565b600182019150611bcc8287611922565b601482019150611bdc8286611943565b602082019150611bec8285611943565b602082019150611bfc8284611965565b915081905097965050505050505056fea2646970667358221220a4659883bc963e6db02ec729bc0c142e0bd745d12176ab1ab47401a25d59858264736f6c634300080c0033";

type TributeMinionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TributeMinionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TributeMinion__factory extends ContractFactory {
  constructor(...args: TributeMinionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TributeMinion> {
    return super.deploy(overrides || {}) as Promise<TributeMinion>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TributeMinion {
    return super.attach(address) as TributeMinion;
  }
  override connect(signer: Signer): TributeMinion__factory {
    return super.connect(signer) as TributeMinion__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TributeMinionInterface {
    return new utils.Interface(_abi) as TributeMinionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TributeMinion {
    return new Contract(address, _abi, signerOrProvider) as TributeMinion;
  }
}
