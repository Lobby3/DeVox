/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  BaalHelpers,
  BaalHelpersInterface,
} from "../../../../../contracts/fixtures/Baal/utils/BaalHelpers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address",
      },
    ],
    name: "NotIERC165Compliant",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAvatar",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAvatar",
        type: "address",
      },
    ],
    name: "AvatarSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "ChangedGuard",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousTarget",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
    ],
    name: "TargetSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transactions",
        type: "bytes",
      },
    ],
    name: "hashOperation",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lootToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sharesToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "prevProposalId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingStarts",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "graceEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiration",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "baalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAndLootAtVote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAtSponsor",
            type: "uint256",
          },
          {
            internalType: "bool[4]",
            name: "status",
            type: "bool[4]",
          },
          {
            internalType: "address",
            name: "sponsor",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BaalTypes.Proposal",
        name: "prop",
        type: "tuple",
      },
    ],
    name: "proposalState",
    outputs: [
      {
        internalType: "enum BaalTypes.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lootToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "ragequitTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address",
      },
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516123f76200011a600039600081816106fe0152818161073e01528181610910015281816109500152610bf501526123f76000f3fe6080604052600436106101615760003560e01c8063715018a6116100c1578063a4f9edbf1161007a578063a4f9edbf146103e5578063c910638914610403578063d4b8399214610421578063d547741f14610441578063e19a9dd914610461578063f2fde38b14610481578063f72c0d8b146104a157600080fd5b8063715018a61461033d578063776d1a01146103525780637ceab3b1146103725780638da5cb5b1461039257806391d14854146103b0578063a217fddf146103d057600080fd5b806336568abe1161011e57806336568abe146102685780633659cfe614610288578063485cc955146102a85780634f1ef286146102c85780634f347a99146102db57806352d1902d146102fb5780635aef7de61461031057600080fd5b806301ffc9a714610166578063086cfca81461019b5780631da4b6aa146101bd578063248a9ca3146101ea578063258bfe2f146102285780632f2ff15d14610248575b600080fd5b34801561017257600080fd5b50610186610181366004611a9f565b6104d5565b60405190151581526020015b60405180910390f35b3480156101a757600080fd5b506101bb6101b6366004611ae0565b61050c565b005b3480156101c957600080fd5b506101dd6101d8366004611c02565b610566565b6040516101929190611d02565b3480156101f657600080fd5b5061021a610205366004611d1c565b6000908152609a602052604090206001015490565b604051908152602001610192565b34801561023457600080fd5b5061021a610243366004611db2565b610616565b34801561025457600080fd5b506101bb610263366004611dee565b610646565b34801561027457600080fd5b506101bb610283366004611dee565b610670565b34801561029457600080fd5b506101bb6102a3366004611ae0565b6106f3565b3480156102b457600080fd5b506101bb6102c3366004611e1a565b6107b9565b6101bb6102d6366004611e44565b610905565b3480156102e757600080fd5b506101bb6102f6366004611e91565b6109bb565b34801561030757600080fd5b5061021a610be8565b34801561031c57600080fd5b50606654610330906001600160a01b031681565b6040516101929190611f6d565b34801561034957600080fd5b506101bb610c96565b34801561035e57600080fd5b506101bb61036d366004611ae0565b610caa565b34801561037e57600080fd5b50606554610330906001600160a01b031681565b34801561039e57600080fd5b506033546001600160a01b0316610330565b3480156103bc57600080fd5b506101866103cb366004611dee565b610d04565b3480156103dc57600080fd5b5061021a600081565b3480156103f157600080fd5b506101bb610400366004611db2565b50565b34801561040f57600080fd5b506065546001600160a01b0316610330565b34801561042d57600080fd5b50606754610330906001600160a01b031681565b34801561044d57600080fd5b506101bb61045c366004611dee565b610d2f565b34801561046d57600080fd5b506101bb61047c366004611ae0565b610d54565b34801561048d57600080fd5b506101bb61049c366004611ae0565b610e50565b3480156104ad57600080fd5b5061021a7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60006001600160e01b03198216637965db0b60e01b148061050657506301ffc9a760e01b6001600160e01b03198316145b92915050565b610514610ec6565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b805160009063ffffffff1661057d57506000919050565b610160820151511561059157506003919050565b604082015163ffffffff166105a857506001919050565b816060015163ffffffff1642116105c157506002919050565b816080015163ffffffff1642116105da57506004919050565b8160e00151826101000151106105f257506007919050565b610160820151602001511561060957506006919050565b506005919050565b919050565b6000816040516020016106299190611fef565b604051602081830303815290604052805190602001209050919050565b6000828152609a602052604090206001015461066181610f20565b61066b8383610f2a565b505050565b6001600160a01b03811633146106e55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106ef8282610fb0565b5050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561073c5760405162461bcd60e51b81526004016106dc90612002565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661076e611017565b6001600160a01b0316146107945760405162461bcd60e51b81526004016106dc9061204e565b61079d81611033565b604080516000808252602082019092526104009183919061105d565b600054610100900460ff16158080156107d95750600054600160ff909116105b806107f35750303b1580156107f3575060005460ff166001145b6108565760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106dc565b6000805460ff191660011790558015610879576000805461ff0019166101001790555b6108816111c8565b6108896111c8565b61013080546001600160a01b038086166001600160a01b031992831617909255610131805492851692909116919091179055801561066b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561094e5760405162461bcd60e51b81526004016106dc90612002565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610980611017565b6001600160a01b0316146109a65760405162461bcd60e51b81526004016106dc9061204e565b6109af82611033565b6106ef8282600161105d565b82156109cb576109cb3384611233565b83156109db576109db3385611294565b60005b8151811015610be057600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838381518110610a1957610a19611f81565b60200260200101516001600160a01b03161415610a4357506067546001600160a01b031631610b28565b6000838381518110610a5757610a57611f81565b60200260200101516001600160a01b03166370a08231606760009054906101000a90046001600160a01b0316604051602401610a939190611f6d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610acc919061209a565b600060405180830381855afa9150503d8060008114610b07576040519150601f19603f3d011682016040523d82523d6000602084013e610b0c565b606091505b5091505080806020019051810190610b2491906120b6565b9150505b60008482610b3689896120e5565b610b4091906120fd565b610b4a919061211c565b90508015610bcb5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316848481518110610b8257610b82611f81565b60200260200101516001600160a01b031614610bc157610bbc848481518110610bad57610bad611f81565b602002602001015189836112c7565b610bcb565b610bcb8882611389565b50508080610bd89061213e565b9150506109de565b505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c835760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016106dc565b5060008051602061237b83398151915290565b610c9e610ec6565b610ca860006113ed565b565b610cb2610ec6565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b6000918252609a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828152609a6020526040902060010154610d4a81610f20565b61066b8383610fb0565b610d5c610ec6565b6001600160a01b03811615610df9576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190612159565b610df957806040516358b7533f60e11b81526004016106dc9190611f6d565b606580546001600160a01b0319166001600160a01b0383169081179091556040517f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa291610e4591611f6d565b60405180910390a150565b610e58610ec6565b6001600160a01b038116610ebd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106dc565b610400816113ed565b6033546001600160a01b03163314610ca85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106dc565b610400813361143f565b610f348282610d04565b6106ef576000828152609a602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610f6c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610fba8282610d04565b156106ef576000828152609a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008051602061237b833981519152546001600160a01b031690565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36106ef81610f20565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110905761066b83611498565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110ea575060408051601f3d908101601f191682019092526110e7918101906120b6565b60015b61114d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106dc565b60008051602061237b83398151915281146111bc5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106dc565b5061066b838383611534565b600054610100900460ff16610ca85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106dc565b61013054604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906112669085908590600401612176565b600060405180830381600087803b15801561128057600080fd5b505af1158015610be0573d6000803e3d6000fd5b61013154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906112669085908590600401612176565b60008061131b85600063a9059cbb87876040516024016112e8929190612176565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050600061155f565b915091508180156113445750805115806113445750808060200190518101906113449190612159565b6113825760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016106dc565b5050505050565b60006113a7838360405180602001604052806000815250600061155f565b5090508061066b5760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016106dc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6114498282610d04565b6106ef5761145681611779565b61146183602061178b565b60405160200161147292919061218f565b60408051601f198184030181529082905262461bcd60e51b82526106dc91600401611fef565b6001600160a01b0381163b6115055760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106dc565b60008051602061237b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61153d8361192d565b60008251118061154a5750805b1561066b57611559838361196d565b50505050565b6065546000906060906001600160a01b031680156116ec576040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b038316916375f0bb52916115cd918b918b918b918b9160009182918291829182913390600401612212565b600060405180830381600087803b1580156115e757600080fd5b505af11580156115fb573d6000803e3d6000fd5b5050606754604051635229073f60e01b81526001600160a01b039091169250635229073f9150611635908a908a908a908a906004016122a1565b6000604051808303816000875af1158015611654573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261167c91908101906122d7565b604051631264e26d60e31b815261060f60f31b6004820152821515602482015291945092506001600160a01b03821690639327136890604401600060405180830381600087803b1580156116cf57600080fd5b505af11580156116e3573d6000803e3d6000fd5b5050505061176f565b606754604051635229073f60e01b81526001600160a01b0390911690635229073f90611722908a908a908a908a906004016122a1565b6000604051808303816000875af1158015611741573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261176991908101906122d7565b90935091505b5094509492505050565b60606105066001600160a01b03831660145b6060600061179a8360026120fd565b6117a59060026120e5565b6001600160401b038111156117bc576117bc611afb565b6040519080825280601f01601f1916602001820160405280156117e6576020820181803683370190505b509050600360fc1b8160008151811061180157611801611f81565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061183057611830611f81565b60200101906001600160f81b031916908160001a90535060006118548460026120fd565b61185f9060016120e5565b90505b60018111156118d7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061189357611893611f81565b1a60f81b8282815181106118a9576118a9611f81565b60200101906001600160f81b031916908160001a90535060049490941c936118d081612363565b9050611862565b5083156119265760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106dc565b9392505050565b61193681611498565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6119d55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106dc565b600080846001600160a01b0316846040516119f0919061209a565b600060405180830381855af49150503d8060008114611a2b576040519150601f19603f3d011682016040523d82523d6000602084013e611a30565b606091505b5091509150611a58828260405180606001604052806027815260200161239b60279139611a61565b95945050505050565b60608315611a70575081611926565b6119268383815115611a855781518083602001fd5b8060405162461bcd60e51b81526004016106dc9190611fef565b600060208284031215611ab157600080fd5b81356001600160e01b03198116811461192657600080fd5b80356001600160a01b038116811461061157600080fd5b600060208284031215611af257600080fd5b61192682611ac9565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b0381118282101715611b3457611b34611afb565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611b6257611b62611afb565b604052919050565b803563ffffffff8116811461061157600080fd5b801515811461040057600080fd5b600082601f830112611b9d57600080fd5b604051608081018181106001600160401b0382111715611bbf57611bbf611afb565b604052806080840185811115611bd457600080fd5b845b81811015611bf7578035611be981611b7e565b835260209283019201611bd6565b509195945050505050565b60006102208284031215611c1557600080fd5b611c1d611b11565b611c2683611b6a565b8152611c3460208401611b6a565b6020820152611c4560408401611b6a565b6040820152611c5660608401611b6a565b6060820152611c6760808401611b6a565b6080820152611c7860a08401611b6a565b60a082015260c0838101359082015260e08084013590820152610100808401359082015261012080840135908201526101408084013590820152610160611cc185828601611b8c565b90820152611cd26101e08401611ac9565b61018082015261020092909201356101a083015250919050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310611d1657611d16611cec565b91905290565b600060208284031215611d2e57600080fd5b5035919050565b60006001600160401b03821115611d4e57611d4e611afb565b50601f01601f191660200190565b600082601f830112611d6d57600080fd5b8135611d80611d7b82611d35565b611b3a565b818152846020838601011115611d9557600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611dc457600080fd5b81356001600160401b03811115611dda57600080fd5b611de684828501611d5c565b949350505050565b60008060408385031215611e0157600080fd5b82359150611e1160208401611ac9565b90509250929050565b60008060408385031215611e2d57600080fd5b611e3683611ac9565b9150611e1160208401611ac9565b60008060408385031215611e5757600080fd5b611e6083611ac9565b915060208301356001600160401b03811115611e7b57600080fd5b611e8785828601611d5c565b9150509250929050565b600080600080600060a08688031215611ea957600080fd5b611eb286611ac9565b94506020808701359450604087013593506060870135925060808701356001600160401b0380821115611ee457600080fd5b818901915089601f830112611ef857600080fd5b813581811115611f0a57611f0a611afb565b8060051b9150611f1b848301611b3a565b818152918301840191848101908c841115611f3557600080fd5b938501935b83851015611f5a57611f4b85611ac9565b82529385019390850190611f3a565b8096505050505050509295509295909350565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052603260045260246000fd5b60005b83811015611fb2578181015183820152602001611f9a565b838111156115595750506000910152565b60008151808452611fdb816020860160208601611f97565b601f01601f19169290920160200192915050565b6020815260006119266020830184611fc3565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600082516120ac818460208701611f97565b9190910192915050565b6000602082840312156120c857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156120f8576120f86120cf565b500190565b6000816000190483118215151615612117576121176120cf565b500290565b60008261213957634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415612152576121526120cf565b5060010190565b60006020828403121561216b57600080fd5b815161192681611b7e565b6001600160a01b03929092168252602082015260400190565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516121c1816017850160208801611f97565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516121f2816028840160208801611f97565b01602801949350505050565b6002811061220e5761220e611cec565b9052565b6001600160a01b038c81168252602082018c90526101606040830181905260009161223f8483018e611fc3565b915061224e606085018d6121fe565b8a60808501528960a08501528860c085015280881660e08501528087166101008501528382036101208501526122848287611fc3565b925080851661014085015250509c9b505050505050505050505050565b60018060a01b03851681528360208201526080604082015260006122c86080830185611fc3565b9050611a5860608301846121fe565b600080604083850312156122ea57600080fd5b82516122f581611b7e565b60208401519092506001600160401b0381111561231157600080fd5b8301601f8101851361232257600080fd5b8051612330611d7b82611d35565b81815286602083850101111561234557600080fd5b612356826020830160208601611f97565b8093505050509250929050565b600081612372576123726120cf565b50600019019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fed6a171b0fdf59bf113a2d3a4a1747f34432b9b7b73e39c2946f6d4743c914664736f6c634300080c0033";

type BaalHelpersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaalHelpersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaalHelpers__factory extends ContractFactory {
  constructor(...args: BaalHelpersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaalHelpers> {
    return super.deploy(overrides || {}) as Promise<BaalHelpers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaalHelpers {
    return super.attach(address) as BaalHelpers;
  }
  override connect(signer: Signer): BaalHelpers__factory {
    return super.connect(signer) as BaalHelpers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaalHelpersInterface {
    return new utils.Interface(_abi) as BaalHelpersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaalHelpers {
    return new Contract(address, _abi, signerOrProvider) as BaalHelpers;
  }
}
