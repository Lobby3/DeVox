/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  Shares,
  SharesInterface,
} from "../../../../../contracts/fixtures/Baal/SharesERC20.sol/Shares";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromTimeStamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nCheckpoints",
        type: "uint256",
      },
    ],
    name: "getCheckpoint",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromTimeStamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct BaalVotes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612df56200011f6000396000818161077b015281816107c4015281816108fc0152818161093c01526109b40152612df56000f3fe6080604052600436106101c45760003560e01c80635c975abb116100f857806395d89b411161009057806395d89b411461057c5780639dc29fac14610591578063a457c2d7146105b1578063a9059cbb146105d1578063b4b5ea57146105f1578063c3cda52014610611578063d505accf14610631578063dd62ed3e14610651578063f2fde38b1461067157600080fd5b80635c975abb146104665780636fcfff451461047f57806370a08231146104ac578063715018a6146104cc578063782d6fe1146104e15780637ecebe00146105015780638456cb591461052157806384b0196e146105365780638da5cb5b1461055e57600080fd5b8063395093511161016b578063395093511461031a5780633f4ba83a1461033a57806340c10f191461034f57806347f761f51461036f5780634f1ef286146103b057806352d1902d146103c3578063562d190d146103d8578063587cde1e146103f85780635c19a95c1461044657600080fd5b806306fdde03146101c9578063095ea7b3146101f45780630cdfebfa1461022457806318160ddd1461028857806323b872dd146102a7578063313ce567146102c75780633644e515146102e35780633659cfe6146102f8575b600080fd5b3480156101d557600080fd5b506101de610691565b6040516101eb919061281b565b60405180910390f35b34801561020057600080fd5b5061021461020f36600461284a565b610723565b60405190151581526020016101eb565b34801561023057600080fd5b5061026c61023f36600461284a565b60cc6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101eb565b34801561029457600080fd5b506035545b6040519081526020016101eb565b3480156102b357600080fd5b506102146102c2366004612874565b61073d565b3480156102d357600080fd5b50604051601281526020016101eb565b3480156102ef57600080fd5b50610299610761565b34801561030457600080fd5b506103186103133660046128b0565b610770565b005b34801561032657600080fd5b5061021461033536600461284a565b610842565b34801561034657600080fd5b50610318610864565b34801561035b57600080fd5b5061031861036a36600461284a565b610876565b34801561037b57600080fd5b5061038f61038a36600461284a565b61089f565b60408051825163ffffffff16815260209283015192810192909252016101eb565b6103186103be366004612957565b6108f1565b3480156103cf57600080fd5b506102996109a7565b3480156103e457600080fd5b506103186103f33660046129d9565b610a55565b34801561040457600080fd5b5061042e6104133660046128b0565b60ce602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101eb565b34801561045257600080fd5b506103186104613660046128b0565b610bfd565b34801561047257600080fd5b506101015460ff16610214565b34801561048b57600080fd5b5061029961049a3660046128b0565b60cd6020526000908152604090205481565b3480156104b857600080fd5b506102996104c73660046128b0565b610c07565b3480156104d857600080fd5b50610318610c22565b3480156104ed57600080fd5b506102996104fc36600461284a565b610c34565b34801561050d57600080fd5b5061029961051c3660046128b0565b610d74565b34801561052d57600080fd5b50610318610d92565b34801561054257600080fd5b5061054b610da2565b6040516101eb9796959493929190612a33565b34801561056a57600080fd5b5060cf546001600160a01b031661042e565b34801561058857600080fd5b506101de610e40565b34801561059d57600080fd5b506103186105ac36600461284a565b610e4f565b3480156105bd57600080fd5b506102146105cc36600461284a565b610e61565b3480156105dd57600080fd5b506102146105ec36600461284a565b610edc565b3480156105fd57600080fd5b5061029961060c3660046128b0565b610eea565b34801561061d57600080fd5b5061031861062c366004612ada565b610f28565b34801561063d57600080fd5b5061031861064c366004612b32565b6110df565b34801561065d57600080fd5b5061029961066c366004612b9c565b611243565b34801561067d57600080fd5b5061031861068c3660046128b0565b61126e565b6060603680546106a090612bcf565b80601f01602080910402602001604051908101604052809291908181526020018280546106cc90612bcf565b80156107195780601f106106ee57610100808354040283529160200191610719565b820191906000526020600020905b8154815290600101906020018083116106fc57829003601f168201915b5050505050905090565b6000336107318185856112e4565b60019150505b92915050565b60003361074b858285611408565b610756858585611482565b506001949350505050565b600061076b611626565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107c25760405162461bcd60e51b81526004016107b990612c04565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107f4611630565b6001600160a01b03161461081a5760405162461bcd60e51b81526004016107b990612c50565b6108238161164c565b6040805160008082526020820190925261083f91839190611654565b50565b6000336107318185856108558383611243565b61085f9190612c9c565b6112e4565b61086c6117bf565b610874611819565b565b61087e6117bf565b6035546001600160ff1b039082011161089b5761089b828261186c565b5050565b604080518082018252600080825260209182018190526001600160a01b0394909416845260cc8152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561093a5760405162461bcd60e51b81526004016107b990612c04565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661096c611630565b6001600160a01b0316146109925760405162461bcd60e51b81526004016107b990612c50565b61099b8261164c565b61089b82826001611654565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a425760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016107b9565b50600080516020612d5983398151915290565b600054610100900460ff1615808015610a755750600054600160ff909116105b80610a8f5750303b158015610a8f575060005460ff166001145b610af25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107b9565b6000805460ff191660011790558015610b15576000805461ff0019166101001790555b8251610b515760405162461bcd60e51b815260206004820152600b60248201526a536e616d6520656d70747960a81b60448201526064016107b9565b8151610b8f5760405162461bcd60e51b815260206004820152600d60248201526c5373796d626f6c20656d70747960981b60448201526064016107b9565b610b998383611927565b610ba283611958565b610baa6119a2565b610bb26119d1565b8015610bf8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b61083f3382611a00565b6001600160a01b031660009081526033602052604090205490565b610c2a6117bf565b6108746000611ad2565b6000428210610c735760405162461bcd60e51b815260206004820152600b60248201526a0859195d195c9b5a5b995960aa1b60448201526064016107b9565b6001600160a01b038316600090815260cd602052604090205480610c9b576000915050610737565b82610ca9856001840361089f565b5163ffffffff1611610cce57610cc2846001830361089f565b60200151915050610737565b82610cda85600061089f565b5163ffffffff161115610cf1576000915050610737565b600060001982015b81811115610d5c5760028282030481036000610d15888361089f565b805190915063ffffffff16871415610d37576020015194506107379350505050565b805163ffffffff16871115610d4e57819350610d55565b6001820392505b5050610cf9565b610d66868361089f565b602001519695505050505050565b6001600160a01b038116600090815260996020526040812054610737565b610d9a6117bf565b610874611b24565b6000606080600080600060606065546000801b148015610dc25750606654155b610e065760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016107b9565b610e0e611b62565b610e16611b71565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060603780546106a090612bcf565b610e576117bf565b61089b8282611b80565b60003381610e6f8286611243565b905083811015610ecf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107b9565b61075682868684036112e4565b600033610731818585611482565b6001600160a01b038116600090815260cd602052604081205480610f0f576000610f21565b610f1c836001830361089f565b602001515b9392505050565b83421115610f785760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016107b9565b60006110216110197f0e3bc21ca2be03aeeee0e614bfe98f970c96a05a768f627c50ab81764cb50268610fa9610691565b604051602001610fb99190612cc2565b60408051601f198184030181528282528051602091820120908301939093528101919091526001600160a01b038a1660608201526080810189905260a0810188905260c00160405160208183030381529060405280519060200120611cae565b858585611cdb565b90506001600160a01b0381166110795760405162461bcd60e51b815260206004820181905260248201527f4552433230566f7465733a20696e76616c6964207369676e657220283078302960448201526064016107b9565b61108281611d05565b86146110cc5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b60448201526064016107b9565b6110d68188611a00565b50505050505050565b8342111561112f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016107b9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861115e8c611d05565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006111b982611cae565b905060006111c982878787611cdb565b9050896001600160a01b0316816001600160a01b03161461122c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016107b9565b6112378a8a8a6112e4565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6112766117bf565b6001600160a01b0381166112db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b9565b61083f81611ad2565b6001600160a01b0383166113465760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107b9565b6001600160a01b0382166113a75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107b9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114148484611243565b9050600019811461147c578181101561146f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107b9565b61147c84848484036112e4565b50505050565b6001600160a01b0383166114e65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b9565b6001600160a01b0382166115485760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b9565b611553838383611d2d565b6001600160a01b038316600090815260336020526040902054818110156115cb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107b9565b6001600160a01b038085166000818152603360205260408082208686039055928616808252908390208054860190559151600080516020612da0833981519152906116199086815260200190565b60405180910390a361147c565b600061076b611db5565b600080516020612d59833981519152546001600160a01b031690565b61083f6117bf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561168757610bf883611e29565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116e1575060408051601f3d908101601f191682019092526116de91810190612cde565b60015b6117445760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016107b9565b600080516020612d5983398151915281146117b35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016107b9565b50610bf8838383611ec5565b60cf546001600160a01b031633146108745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107b9565b611821611eea565b610101805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166118c25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107b9565b6118ce60008383611d2d565b80603560008282546118e09190612c9c565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020612da0833981519152910160405180910390a35050565b600054610100900460ff1661194e5760405162461bcd60e51b81526004016107b990612cf7565b61089b8282611f34565b600054610100900460ff1661197f5760405162461bcd60e51b81526004016107b990612cf7565b61083f81604051806040016040528060018152602001603160f81b815250611f82565b600054610100900460ff166119c95760405162461bcd60e51b81526004016107b990612cf7565b610874611fdf565b600054610100900460ff166119f85760405162461bcd60e51b81526004016107b990612cf7565b610874612013565b6000611a0b83610c07565b11611a425760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b60448201526064016107b9565b6001600160a01b03808316600090815260ce6020526040902080548383166001600160a01b031982161790915516611a838183611a7e86610c07565b612043565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b60cf80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b2c612125565b610101805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861184f3390565b6060606780546106a090612bcf565b6060606880546106a090612bcf565b6001600160a01b038216611be05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107b9565b611bec82600083611d2d565b6001600160a01b03821660009081526033602052604090205481811015611c605760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107b9565b6001600160a01b0383166000818152603360209081526040808320868603905560358054879003905551858152919291600080516020612da0833981519152910160405180910390a3505050565b6000610737611cbb611626565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611cec8787878761216c565b91509150611cf981612226565b5090505b949350505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b611d3883838361236f565b6001600160a01b0383161580611d6a575060cf546001600160a01b031633148015611d6a57506001600160a01b038216155b80611d7957506101015460ff16155b610bf85760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b60448201526064016107b9565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611de0612408565b611de8612465565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b0381163b611e965760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016107b9565b600080516020612d5983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611ece83612496565b600082511180611edb5750805b15610bf85761147c83836124d6565b6101015460ff166108745760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107b9565b600054610100900460ff16611f5b5760405162461bcd60e51b81526004016107b990612cf7565b8151611f6e906036906020850190612733565b508051610bf8906037906020840190612733565b600054610100900460ff16611fa95760405162461bcd60e51b81526004016107b990612cf7565b8151611fbc906067906020850190612733565b508051611fd0906068906020840190612733565b50506000606581905560665550565b600054610100900460ff166120065760405162461bcd60e51b81526004016107b990612cf7565b610101805460ff19169055565b600054610100900460ff1661203a5760405162461bcd60e51b81526004016107b990612cf7565b61087433611ad2565b816001600160a01b0316836001600160a01b03161415801561206457508015155b15610bf8576001600160a01b038316156120c5576001600160a01b038316600090815260cd6020526040812054908161209e5760006120b0565b6120ab856001840361089f565b602001515b90508281036120c1868484846124fb565b5050505b6001600160a01b03821615610bf8576001600160a01b038216600090815260cd602052604081205490816120fa57600061210c565b612107846001840361089f565b602001515b905082810161211d858484846124fb565b505050505050565b6101015460ff16156108745760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107b9565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612199575060009050600361221d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156121ed573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166122165760006001925092505061221d565b9150600090505b94509492505050565b600081600481111561223a5761223a612d42565b14156122435750565b600181600481111561225757612257612d42565b14156122a05760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107b9565b60028160048111156122b4576122b4612d42565b14156123025760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107b9565b600381600481111561231657612316612d42565b141561083f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107b9565b61237882610c07565b15801561239b57506001600160a01b038216600090815260cd6020526040902054155b80156123a75750600081115b156123d6576001600160a01b038216600081815260ce6020526040902080546001600160a01b03191690911790555b6001600160a01b03808416600090815260ce6020526040808220548584168352912054610bf892918216911683612043565b600080612413611b62565b80519091501561242a578051602090910120919050565b60655480156124395792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b5090565b600080612470611b71565b805190915015612487578051602090910120919050565b60665480156124395792915050565b61249f81611e29565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610f218383604051806060016040528060278152602001612d7960279139612620565b42831580159061253a57506001600160a01b038516600090815260cc602090815260408083206000198801845290915290205463ffffffff8281169116145b15612571576001600160a01b038516600090815260cc602090815260408083206000198801845290915290206001018290556125d5565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a16600081815260cc84528681208b825284528681209551865463ffffffff191695169490941785559051600194850155825260cd90529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b6060600080856001600160a01b03168560405161263d9190612cc2565b600060405180830381855af49150503d8060008114612678576040519150601f19603f3d011682016040523d82523d6000602084013e61267d565b606091505b509150915061268e86838387612698565b9695505050505050565b606083156127045782516126fd576001600160a01b0385163b6126fd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107b9565b5081611cfd565b611cfd83838151156127195781518083602001fd5b8060405162461bcd60e51b81526004016107b9919061281b565b82805461273f90612bcf565b90600052602060002090601f01602090048101928261276157600085556127a7565b82601f1061277a57805160ff19168380011785556127a7565b828001600101855582156127a7579182015b828111156127a757825182559160200191906001019061278c565b506124619291505b8082111561246157600081556001016127af565b60005b838110156127de5781810151838201526020016127c6565b8381111561147c5750506000910152565b600081518084526128078160208601602086016127c3565b601f01601f19169290920160200192915050565b602081526000610f2160208301846127ef565b80356001600160a01b038116811461284557600080fd5b919050565b6000806040838503121561285d57600080fd5b6128668361282e565b946020939093013593505050565b60008060006060848603121561288957600080fd5b6128928461282e565b92506128a06020850161282e565b9150604084013590509250925092565b6000602082840312156128c257600080fd5b610f218261282e565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156128fc576128fc6128cb565b604051601f8501601f19908116603f01168101908282118183101715612924576129246128cb565b8160405280935085815286868601111561293d57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561296a57600080fd5b6129738361282e565b9150602083013567ffffffffffffffff81111561298f57600080fd5b8301601f810185136129a057600080fd5b6129af858235602084016128e1565b9150509250929050565b600082601f8301126129ca57600080fd5b610f21838335602085016128e1565b600080604083850312156129ec57600080fd5b823567ffffffffffffffff80821115612a0457600080fd5b612a10868387016129b9565b93506020850135915080821115612a2657600080fd5b506129af858286016129b9565b60ff60f81b881681526000602060e081840152612a5360e084018a6127ef565b8381036040850152612a65818a6127ef565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015612ab757835183529284019291840191600101612a9b565b50909c9b505050505050505050505050565b803560ff8116811461284557600080fd5b60008060008060008060c08789031215612af357600080fd5b612afc8761282e565b95506020870135945060408701359350612b1860608801612ac9565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215612b4d57600080fd5b612b568861282e565b9650612b646020890161282e565b95506040880135945060608801359350612b8060808901612ac9565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215612baf57600080fd5b612bb88361282e565b9150612bc66020840161282e565b90509250929050565b600181811c90821680612be357607f821691505b60208210811415611d2757634e487b7160e01b600052602260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008219821115612cbd57634e487b7160e01b600052601160045260246000fd5b500190565b60008251612cd48184602087016127c3565b9190910192915050565b600060208284031215612cf057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122055ed07ea54c014986ef442e335a5b75a745c0a121f95a2a704f801cb8ab6dff164736f6c634300080c0033";

type SharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shares__factory extends ContractFactory {
  constructor(...args: SharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shares> {
    return super.deploy(overrides || {}) as Promise<Shares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shares {
    return super.attach(address) as Shares;
  }
  override connect(signer: Signer): Shares__factory {
    return super.connect(signer) as Shares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharesInterface {
    return new utils.Interface(_abi) as SharesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shares {
    return new Contract(address, _abi, signerOrProvider) as Shares;
  }
}
