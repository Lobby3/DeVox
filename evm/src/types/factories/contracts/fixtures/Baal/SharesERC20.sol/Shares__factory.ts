/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  Shares,
  SharesInterface,
} from "../../../../../contracts/fixtures/Baal/SharesERC20.sol/Shares";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromTimePoint",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegationNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nCheckpoints",
        type: "uint256",
      },
    ],
    name: "getCheckpoint",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromTimePoint",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct BaalVotes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timePoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "now",
    outputs: [
      {
        internalType: "uint256",
        name: "timePoint",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612f686200011f600039600081816107e60152818161082f01528181610aa901528181610ae90152610b610152612f686000f3fe6080604052600436106101ea5760003560e01c80635c19a95c116101135780638da5cb5b116100ab578063a9059cbb1161006f578063a9059cbb1461065c578063c3cda5201461067c578063d505accf1461069c578063dd62ed3e146106bc578063f2fde38b146106dc57600080fd5b80638da5cb5b146105c857806395d89b41146105e75780639ab24eb0146105fc5780639dc29fac1461061c578063a457c2d71461063c57600080fd5b80635c19a95c146104bc5780635c975abb146104dc5780636fcfff45146104f557806370a0823114610523578063715018a6146105435780637ecebe00146105585780638456cb591461057857806384b0196e1461058d5780638abe09f2146105b557600080fd5b80633950935111610186578063395093511461036f5780633a46b1a81461038f5780633f4ba83a146103af57806340c10f19146103c457806347f761f5146103e45780634f1ef2861461042557806352d1902d14610438578063562d190d1461044d578063587cde1e1461046d57600080fd5b806303c8a3c6146101ef57806306fdde0314610230578063095ea7b3146102525780630cdfebfa1461028257806318160ddd146102e757806323b872dd146102fc578063313ce5671461031c5780633644e515146103385780633659cfe61461034d575b600080fd5b3480156101fb57600080fd5b5061021d61020a366004612903565b6101036020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561023c57600080fd5b506102456106fc565b6040516102279190612976565b34801561025e57600080fd5b5061027261026d366004612989565b61078e565b6040519015158152602001610227565b34801561028e57600080fd5b506102cb61029d366004612989565b6101006020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610227565b3480156102f357600080fd5b5060355461021d565b34801561030857600080fd5b506102726103173660046129b3565b6107a8565b34801561032857600080fd5b5060405160128152602001610227565b34801561034457600080fd5b5061021d6107cc565b34801561035957600080fd5b5061036d610368366004612903565b6107db565b005b34801561037b57600080fd5b5061027261038a366004612989565b6108ad565b34801561039b57600080fd5b5061021d6103aa366004612989565b6108cf565b3480156103bb57600080fd5b5061036d610a10565b3480156103d057600080fd5b5061036d6103df366004612989565b610a22565b3480156103f057600080fd5b506104046103ff366004612989565b610a4b565b60408051825163ffffffff1681526020928301519281019290925201610227565b61036d610433366004612a7b565b610a9e565b34801561044457600080fd5b5061021d610b54565b34801561045957600080fd5b5061036d610468366004612afd565b610c02565b34801561047957600080fd5b506104a4610488366004612903565b610102602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610227565b3480156104c857600080fd5b5061036d6104d7366004612903565b610daa565b3480156104e857600080fd5b506101365460ff16610272565b34801561050157600080fd5b5061021d610510366004612903565b6101016020526000908152604090205481565b34801561052f57600080fd5b5061021d61053e366004612903565b610db4565b34801561054f57600080fd5b5061036d610dcf565b34801561056457600080fd5b5061021d610573366004612903565b610de1565b34801561058457600080fd5b5061036d610dff565b34801561059957600080fd5b506105a2610e0f565b6040516102279796959493929190612b57565b3480156105c157600080fd5b504261021d565b3480156105d457600080fd5b50610104546001600160a01b03166104a4565b3480156105f357600080fd5b50610245610ead565b34801561060857600080fd5b5061021d610617366004612903565b610ebc565b34801561062857600080fd5b5061036d610637366004612989565b610efb565b34801561064857600080fd5b50610272610657366004612989565b610f0d565b34801561066857600080fd5b50610272610677366004612989565b610f88565b34801561068857600080fd5b5061036d610697366004612bfe565b610f96565b3480156106a857600080fd5b5061036d6106b7366004612c56565b611188565b3480156106c857600080fd5b5061021d6106d7366004612cc0565b6112ec565b3480156106e857600080fd5b5061036d6106f7366004612903565b611317565b60606036805461070b90612cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461073790612cf3565b80156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b5050505050905090565b60003361079c81858561138d565b60019150505b92915050565b6000336107b68582856114b1565b6107c185858561152b565b506001949350505050565b60006107d66116cf565b905090565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561082d5760405162461bcd60e51b815260040161082490612d28565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661085f6116d9565b6001600160a01b0316146108855760405162461bcd60e51b815260040161082490612d74565b61088e816116f5565b604080516000808252602082019092526108aa918391906116fd565b50565b60003361079c8185856108c083836112ec565b6108ca9190612dd6565b61138d565b600042821061090e5760405162461bcd60e51b815260206004820152600b60248201526a0859195d195c9b5a5b995960aa1b6044820152606401610824565b6001600160a01b03831660009081526101016020526040902054806109375760009150506107a2565b826109458560018403610a4b565b5163ffffffff161161096a5761095e8460018303610a4b565b602001519150506107a2565b82610976856000610a4b565b5163ffffffff16111561098d5760009150506107a2565b600060001982015b818111156109f857600282820304810360006109b18883610a4b565b805190915063ffffffff168714156109d3576020015194506107a29350505050565b805163ffffffff168711156109ea578193506109f1565b6001820392505b5050610995565b610a028683610a4b565b602001519695505050505050565b610a18611868565b610a206118c3565b565b610a2a611868565b6035546001600160ff1b0390820111610a4757610a478282611916565b5050565b604080518082018252600080825260209182018190526001600160a01b039490941684526101008152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610ae75760405162461bcd60e51b815260040161082490612d28565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b196116d9565b6001600160a01b031614610b3f5760405162461bcd60e51b815260040161082490612d74565b610b48826116f5565b610a47828260016116fd565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bef5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610824565b50600080516020612ecc83398151915290565b600054610100900460ff1615808015610c225750600054600160ff909116105b80610c3c5750303b158015610c3c575060005460ff166001145b610c9f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610824565b6000805460ff191660011790558015610cc2576000805461ff0019166101001790555b8251610cfe5760405162461bcd60e51b815260206004820152600b60248201526a536e616d6520656d70747960a81b6044820152606401610824565b8151610d3c5760405162461bcd60e51b815260206004820152600d60248201526c5373796d626f6c20656d70747960981b6044820152606401610824565b610d4683836119d1565b610d4f83611a02565b610d57611a4c565b610d5f611a7b565b8015610da5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6108aa3382611aaa565b6001600160a01b031660009081526033602052604090205490565b610dd7611868565b610a206000611b7d565b6001600160a01b0381166000908152609960205260408120546107a2565b610e07611868565b610a20611bd0565b6000606080600080600060606065546000801b148015610e2f5750606654155b610e735760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610824565b610e7b611c0e565b610e83611c1d565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606037805461070b90612cf3565b6001600160a01b0381166000908152610101602052604081205480610ee2576000610ef4565b610eef8360018303610a4b565b602001515b9392505050565b610f03611868565b610a478282611c2c565b60003381610f1b82866112ec565b905083811015610f7b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610824565b6107c1828686840361138d565b60003361079c81858561152b565b83421115610fe65760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610824565b600061108f6110877f0e3bc21ca2be03aeeee0e614bfe98f970c96a05a768f627c50ab81764cb502686110176106fc565b6040516020016110279190612dee565b60408051601f198184030181528282528051602091820120908301939093528101919091526001600160a01b038a1660608201526080810189905260a0810188905260c00160405160208183030381529060405280519060200120611d5a565b858585611d87565b90506001600160a01b0381166110e75760405162461bcd60e51b815260206004820181905260248201527f4552433230566f7465733a20696e76616c6964207369676e65722028307830296044820152606401610824565b6001600160a01b03811660009081526101036020526040902054861461114b5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610824565b6001600160a01b03811660009081526101036020526040812080549161117083612e0a565b919050555061117f8188611aaa565b50505050505050565b834211156111d85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610824565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886112078c611db1565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061126282611dd9565b9050600061127282878787611d87565b9050896001600160a01b0316816001600160a01b0316146112d55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610824565b6112e08a8a8a61138d565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61131f611868565b6001600160a01b0381166113845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610824565b6108aa81611b7d565b6001600160a01b0383166113ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610824565b6001600160a01b0382166114505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610824565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114bd84846112ec565b9050600019811461152557818110156115185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610824565b611525848484840361138d565b50505050565b6001600160a01b03831661158f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610824565b6001600160a01b0382166115f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610824565b6115fc838383611de6565b6001600160a01b038316600090815260336020526040902054818110156116745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610824565b6001600160a01b038085166000818152603360205260408082208686039055928616808252908390208054860190559151600080516020612f13833981519152906116c29086815260200190565b60405180910390a3611525565b60006107d6611e6f565b600080516020612ecc833981519152546001600160a01b031690565b6108aa611868565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561173057610da583611ed3565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561178a575060408051601f3d908101601f1916820190925261178791810190612e25565b60015b6117ed5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610824565b600080516020612ecc833981519152811461185c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610824565b50610da5838383611f6f565b610104546001600160a01b03163314610a205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610824565b6118cb611f94565b610136805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661196c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610824565b61197860008383611de6565b806035600082825461198a9190612dd6565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020612f13833981519152910160405180910390a35050565b600054610100900460ff166119f85760405162461bcd60e51b815260040161082490612e3e565b610a478282611fde565b600054610100900460ff16611a295760405162461bcd60e51b815260040161082490612e3e565b6108aa81604051806040016040528060018152602001603160f81b81525061202c565b600054610100900460ff16611a735760405162461bcd60e51b815260040161082490612e3e565b610a20612089565b600054610100900460ff16611aa25760405162461bcd60e51b815260040161082490612e3e565b610a206120bd565b6000611ab583610db4565b11611aec5760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b6044820152606401610824565b6001600160a01b0380831660009081526101026020526040902080548383166001600160a01b031982161790915516611b2e8183611b2986610db4565b6120ed565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b61010480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611bd86121d1565b610136805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f93390565b60606067805461070b90612cf3565b60606068805461070b90612cf3565b6001600160a01b038216611c8c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610824565b611c9882600083611de6565b6001600160a01b03821660009081526033602052604090205481811015611d0c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610824565b6001600160a01b0383166000818152603360209081526040808320868603905560358054879003905551858152919291600080516020612f13833981519152910160405180910390a3505050565b60006107a2611d67612218565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611d988787878761224f565b91509150611da581612309565b5090505b949350505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006107a2611d676116cf565b611df1838383612452565b6001600160a01b0383161580611e245750610104546001600160a01b031633148015611e2457506001600160a01b038216155b80611e3357506101365460ff16155b610da55760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b6044820152606401610824565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611e9a6124ee565b611ea261254b565b4630604051602001611eb8959493929190612e89565b60405160208183030381529060405280519060200120905090565b6001600160a01b0381163b611f405760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610824565b600080516020612ecc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611f788361257c565b600082511180611f855750805b15610da55761152583836125bc565b6101365460ff16610a205760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610824565b600054610100900460ff166120055760405162461bcd60e51b815260040161082490612e3e565b8151612018906036906020850190612857565b508051610da5906037906020840190612857565b600054610100900460ff166120535760405162461bcd60e51b815260040161082490612e3e565b8151612066906067906020850190612857565b50805161207a906068906020840190612857565b50506000606581905560665550565b600054610100900460ff166120b05760405162461bcd60e51b815260040161082490612e3e565b610136805460ff19169055565b600054610100900460ff166120e45760405162461bcd60e51b815260040161082490612e3e565b610a2033611b7d565b816001600160a01b0316836001600160a01b03161415801561210e57508015155b15610da5576001600160a01b03831615612170576001600160a01b03831660009081526101016020526040812054908161214957600061215b565b6121568560018403610a4b565b602001515b905082810361216c868484846125e1565b5050505b6001600160a01b03821615610da5576001600160a01b0382166000908152610101602052604081205490816121a65760006121b8565b6121b38460018403610a4b565b602001515b90508281016121c9858484846125e1565b505050505050565b6101365460ff1615610a205760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610824565b60006107d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61224760cc5490565b60cd5461270a565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561227c5750600090506003612300565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156122d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166122f957600060019250925050612300565b9150600090505b94509492505050565b600081600481111561231d5761231d612eb5565b14156123265750565b600181600481111561233a5761233a612eb5565b14156123835760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610824565b600281600481111561239757612397612eb5565b14156123e55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610824565b60038160048111156123f9576123f9612eb5565b14156108aa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610824565b61245b82610db4565b15801561247f57506001600160a01b03821660009081526101016020526040902054155b801561248b5750600081115b156124bb576001600160a01b03821660008181526101026020526040902080546001600160a01b03191690911790555b6001600160a01b0380841660009081526101026020526040808220548584168352912054610da5929182169116836120ed565b6000806124f9611c0e565b805190915015612510578051602090910120919050565b606554801561251f5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b5090565b600080612556611c1d565b80519091501561256d578051602090910120919050565b606654801561251f5792915050565b61258581611ed3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610ef48383604051806060016040528060278152602001612eec60279139612744565b42831580159061262157506001600160a01b0385166000908152610100602090815260408083206000198801845290915290205463ffffffff8281169116145b15612659576001600160a01b0385166000908152610100602090815260408083206000198801845290915290206001018290556126bf565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a16600081815261010084528681208b825284528681209551865463ffffffff191695169490941785559051600194850155825261010190529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b60008383834630604051602001612725959493929190612e89565b6040516020818303038152906040528051906020012090509392505050565b6060600080856001600160a01b0316856040516127619190612dee565b600060405180830381855af49150503d806000811461279c576040519150601f19603f3d011682016040523d82523d6000602084013e6127a1565b606091505b50915091506127b2868383876127bc565b9695505050505050565b60608315612828578251612821576001600160a01b0385163b6128215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610824565b5081611da9565b611da9838381511561283d5781518083602001fd5b8060405162461bcd60e51b81526004016108249190612976565b82805461286390612cf3565b90600052602060002090601f01602090048101928261288557600085556128cb565b82601f1061289e57805160ff19168380011785556128cb565b828001600101855582156128cb579182015b828111156128cb5782518255916020019190600101906128b0565b506125479291505b8082111561254757600081556001016128d3565b80356001600160a01b03811681146128fe57600080fd5b919050565b60006020828403121561291557600080fd5b610ef4826128e7565b60005b83811015612939578181015183820152602001612921565b838111156115255750506000910152565b6000815180845261296281602086016020860161291e565b601f01601f19169290920160200192915050565b602081526000610ef4602083018461294a565b6000806040838503121561299c57600080fd5b6129a5836128e7565b946020939093013593505050565b6000806000606084860312156129c857600080fd5b6129d1846128e7565b92506129df602085016128e7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612a2057612a206129ef565b604051601f8501601f19908116603f01168101908282118183101715612a4857612a486129ef565b81604052809350858152868686011115612a6157600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215612a8e57600080fd5b612a97836128e7565b9150602083013567ffffffffffffffff811115612ab357600080fd5b8301601f81018513612ac457600080fd5b612ad385823560208401612a05565b9150509250929050565b600082601f830112612aee57600080fd5b610ef483833560208501612a05565b60008060408385031215612b1057600080fd5b823567ffffffffffffffff80821115612b2857600080fd5b612b3486838701612add565b93506020850135915080821115612b4a57600080fd5b50612ad385828601612add565b60ff60f81b881681526000602060e081840152612b7760e084018a61294a565b8381036040850152612b89818a61294a565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015612bdb57835183529284019291840191600101612bbf565b50909c9b505050505050505050505050565b803560ff811681146128fe57600080fd5b60008060008060008060c08789031215612c1757600080fd5b612c20876128e7565b95506020870135945060408701359350612c3c60608801612bed565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215612c7157600080fd5b612c7a886128e7565b9650612c88602089016128e7565b95506040880135945060608801359350612ca460808901612bed565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215612cd357600080fd5b612cdc836128e7565b9150612cea602084016128e7565b90509250929050565b600181811c90821680612d0757607f821691505b60208210811415611dd357634e487b7160e01b600052602260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612de957612de9612dc0565b500190565b60008251612e0081846020870161291e565b9190910192915050565b6000600019821415612e1e57612e1e612dc0565b5060010190565b600060208284031215612e3757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220079e2343a92c1dc258eb130aed418e61de268c573dba289a65950cad70d4ed9e64736f6c634300080c0033";

type SharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shares__factory extends ContractFactory {
  constructor(...args: SharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shares> {
    return super.deploy(overrides || {}) as Promise<Shares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shares {
    return super.attach(address) as Shares;
  }
  override connect(signer: Signer): Shares__factory {
    return super.connect(signer) as Shares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharesInterface {
    return new utils.Interface(_abi) as SharesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shares {
    return new Contract(address, _abi, signerOrProvider) as Shares;
  }
}
