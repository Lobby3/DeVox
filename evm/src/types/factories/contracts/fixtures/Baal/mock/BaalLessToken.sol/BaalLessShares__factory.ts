/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  BaalLessShares,
  BaalLessSharesInterface,
} from "../../../../../../contracts/fixtures/Baal/mock/BaalLessToken.sol/BaalLessShares";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromTimeStamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nCheckpoints",
        type: "uint256",
      },
    ],
    name: "getCheckpoint",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromTimeStamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct BaalVotes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_version",
        type: "uint8",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516129356200011f60003960008181610776015281816107bf015281816108e501528181610925015261099d01526129356000f3fe6080604052600436106101b95760003560e01c806370a08231116100ed578063a457c2d711610090578063a457c2d71461056b578063a9059cbb1461058b578063b4b5ea57146105ab578063c3cda520146105cb578063d505accf146105eb578063dd62ed3e1461060b578063e258a72e1461062b578063e5a2a2a51461064b578063f2fde38b1461066c57600080fd5b806370a082311461047b578063715018a61461049b578063782d6fe1146104b05780637ecebe00146104d057806384b0196e146104f05780638da5cb5b1461051857806395d89b41146105365780639dc29fac1461054b57600080fd5b80633950935111610160578063395093511461031557806340c10f191461033557806347f761f5146103555780634f1ef2861461039657806352d1902d146103a957806354fd4d50146103be578063587cde1e146103e05780635c19a95c1461042e5780636fcfff451461044e57600080fd5b806306fdde03146101be578063095ea7b3146101e95780630cdfebfa1461021957806318160ddd1461027d57806323b872dd1461029c578063313ce567146102bc5780633644e515146102de5780633659cfe6146102f3575b600080fd5b3480156101ca57600080fd5b506101d361068c565b6040516101e091906123d0565b60405180910390f35b3480156101f557600080fd5b506102096102043660046123ff565b61071e565b60405190151581526020016101e0565b34801561022557600080fd5b506102616102343660046123ff565b60cc6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101e0565b34801561028957600080fd5b506035545b6040519081526020016101e0565b3480156102a857600080fd5b506102096102b7366004612429565b610738565b3480156102c857600080fd5b5060125b60405160ff90911681526020016101e0565b3480156102ea57600080fd5b5061028e61075c565b3480156102ff57600080fd5b5061031361030e366004612465565b61076b565b005b34801561032157600080fd5b506102096103303660046123ff565b61083d565b34801561034157600080fd5b506103136103503660046123ff565b61085f565b34801561036157600080fd5b506103756103703660046123ff565b610888565b60408051825163ffffffff16815260209283015192810192909252016101e0565b6103136103a4366004612496565b6108da565b3480156103b557600080fd5b5061028e610990565b3480156103ca57600080fd5b50610165546102cc90600160a01b900460ff1681565b3480156103ec57600080fd5b506104166103fb366004612465565b60ce602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e0565b34801561043a57600080fd5b50610313610449366004612465565b610a3e565b34801561045a57600080fd5b5061028e610469366004612465565b60cd6020526000908152604090205481565b34801561048757600080fd5b5061028e610496366004612465565b610a48565b3480156104a757600080fd5b50610313610a63565b3480156104bc57600080fd5b5061028e6104cb3660046123ff565b610a77565b3480156104dc57600080fd5b5061028e6104eb366004612465565b610bb7565b3480156104fc57600080fd5b50610505610bd5565b6040516101e09796959493929190612558565b34801561052457600080fd5b5060cf546001600160a01b0316610416565b34801561054257600080fd5b506101d3610c73565b34801561055757600080fd5b506103136105663660046123ff565b610c82565b34801561057757600080fd5b506102096105863660046123ff565b610c94565b34801561059757600080fd5b506102096105a63660046123ff565b610d0f565b3480156105b757600080fd5b5061028e6105c6366004612465565b610d1d565b3480156105d757600080fd5b506103136105e63660046125ff565b610d5b565b3480156105f757600080fd5b50610313610606366004612657565b610f12565b34801561061757600080fd5b5061028e6106263660046126c1565b611076565b34801561063757600080fd5b506103136106463660046126f4565b6110a1565b34801561065757600080fd5b5061016554610416906001600160a01b031681565b34801561067857600080fd5b50610313610687366004612465565b6111b3565b60606036805461069b9061270f565b80601f01602080910402602001604051908101604052809291908181526020018280546106c79061270f565b80156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b5050505050905090565b60003361072c818585611229565b60019150505b92915050565b60003361074685828561134d565b6107518585856113c7565b506001949350505050565b600061076661156b565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107bd5760405162461bcd60e51b81526004016107b490612744565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107ef611575565b6001600160a01b0316146108155760405162461bcd60e51b81526004016107b490612790565b61081e81611591565b6040805160008082526020820190925261083a91839190611599565b50565b60003361072c8185856108508383611076565b61085a91906127dc565b611229565b610867611709565b6035546001600160ff1b0390820111610884576108848282611763565b5050565b604080518082018252600080825260209182018190526001600160a01b0394909416845260cc8152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109235760405162461bcd60e51b81526004016107b490612744565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610955611575565b6001600160a01b03161461097b5760405162461bcd60e51b81526004016107b490612790565b61098482611591565b61088482826001611599565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a2b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016107b4565b5060008051602061289983398151915290565b61083a338261181e565b6001600160a01b031660009081526033602052604090205490565b610a6b611709565b610a7560006118f0565b565b6000428210610ab65760405162461bcd60e51b815260206004820152600b60248201526a0859195d195c9b5a5b995960aa1b60448201526064016107b4565b6001600160a01b038316600090815260cd602052604090205480610ade576000915050610732565b82610aec8560018403610888565b5163ffffffff1611610b1157610b058460018303610888565b60200151915050610732565b82610b1d856000610888565b5163ffffffff161115610b34576000915050610732565b600060001982015b81811115610b9f5760028282030481036000610b588883610888565b805190915063ffffffff16871415610b7a576020015194506107329350505050565b805163ffffffff16871115610b9157819350610b98565b6001820392505b5050610b3c565b610ba98683610888565b602001519695505050505050565b6001600160a01b038116600090815260996020526040812054610732565b6000606080600080600060606065546000801b148015610bf55750606654155b610c395760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016107b4565b610c41611942565b610c49611951565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606037805461069b9061270f565b610c8a611709565b6108848282611960565b60003381610ca28286611076565b905083811015610d025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107b4565b6107518286868403611229565b60003361072c8185856113c7565b6001600160a01b038116600090815260cd602052604081205480610d42576000610d54565b610d4f8360018303610888565b602001515b9392505050565b83421115610dab5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016107b4565b6000610e54610e4c7f0e3bc21ca2be03aeeee0e614bfe98f970c96a05a768f627c50ab81764cb50268610ddc61068c565b604051602001610dec9190612802565b60408051601f198184030181528282528051602091820120908301939093528101919091526001600160a01b038a1660608201526080810189905260a0810188905260c00160405160208183030381529060405280519060200120611a8e565b858585611abb565b90506001600160a01b038116610eac5760405162461bcd60e51b815260206004820181905260248201527f4552433230566f7465733a20696e76616c6964207369676e657220283078302960448201526064016107b4565b610eb581611ae5565b8614610eff5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b60448201526064016107b4565b610f09818861181e565b50505050505050565b83421115610f625760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016107b4565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f918c611ae5565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610fec82611a8e565b90506000610ffc82878787611abb565b9050896001600160a01b0316816001600160a01b03161461105f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016107b4565b61106a8a8a8a611229565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6000548190610100900460ff161580156110c2575060005460ff8083169116105b6111255760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107b4565b6000805461ffff191660ff80841691909117610100179091556101658054918416600160a01b026001600160a81b0319909216919091179055611166611b0d565b61116e611b3c565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6111bb611709565b6001600160a01b0381166112205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b4565b61083a816118f0565b6001600160a01b03831661128b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107b4565b6001600160a01b0382166112ec5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107b4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113598484611076565b905060001981146113c157818110156113b45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107b4565b6113c18484848403611229565b50505050565b6001600160a01b03831661142b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b4565b6001600160a01b03821661148d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b4565b611498838383611b63565b6001600160a01b038316600090815260336020526040902054818110156115105760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107b4565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591516000805160206128e08339815191529061155e9086815260200190565b60405180910390a36113c1565b6000610766611b6e565b600080516020612899833981519152546001600160a01b031690565b61083a611709565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156115d1576115cc83611be2565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561162b575060408051601f3d908101601f191682019092526116289181019061281e565b60015b61168e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016107b4565b60008051602061289983398151915281146116fd5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016107b4565b506115cc838383611c7e565b60cf546001600160a01b03163314610a755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107b4565b6001600160a01b0382166117b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107b4565b6117c560008383611b63565b80603560008282546117d791906127dc565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481526000805160206128e0833981519152910160405180910390a35050565b600061182983610a48565b116118605760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b60448201526064016107b4565b6001600160a01b03808316600090815260ce6020526040902080548383166001600160a01b0319821617909155166118a1818361189c86610a48565b611ca3565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b60cf80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606067805461069b9061270f565b60606068805461069b9061270f565b6001600160a01b0382166119c05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107b4565b6119cc82600083611b63565b6001600160a01b03821660009081526033602052604090205481811015611a405760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107b4565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192916000805160206128e0833981519152910160405180910390a3505050565b6000610732611a9b61156b565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611acc87878787611d85565b91509150611ad981611e3f565b5090505b949350505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b600054610100900460ff16611b345760405162461bcd60e51b81526004016107b490612837565b610a75611f88565b600054610100900460ff16610a755760405162461bcd60e51b81526004016107b490612837565b6115cc838383611fb8565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b99612051565b611ba16120aa565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b0381163b611c4f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016107b4565b60008051602061289983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611c87836120db565b600082511180611c945750805b156115cc576113c1838361211b565b816001600160a01b0316836001600160a01b031614158015611cc457508015155b156115cc576001600160a01b03831615611d25576001600160a01b038316600090815260cd60205260408120549081611cfe576000611d10565b611d0b8560018403610888565b602001515b9050828103611d2186848484612140565b5050505b6001600160a01b038216156115cc576001600160a01b038216600090815260cd60205260408120549081611d5a576000611d6c565b611d678460018403610888565b602001515b9050828101611d7d85848484612140565b505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611db25750600090506003611e36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e2f57600060019250925050611e36565b9150600090505b94509492505050565b6000816004811115611e5357611e53612882565b1415611e5c5750565b6001816004811115611e7057611e70612882565b1415611eb95760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107b4565b6002816004811115611ecd57611ecd612882565b1415611f1b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107b4565b6003816004811115611f2f57611f2f612882565b141561083a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107b4565b600054610100900460ff16611faf5760405162461bcd60e51b81526004016107b490612837565b610a75336118f0565b611fc182610a48565b158015611fe457506001600160a01b038216600090815260cd6020526040902054155b8015611ff05750600081115b1561201f576001600160a01b038216600081815260ce6020526040902080546001600160a01b03191690911790555b6001600160a01b03808416600090815260ce60205260408082205485841683529120546115cc92918216911683611ca3565b60008061205c611942565b805190915015612073578051602090910120919050565b60655480156120825792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b6000806120b5611951565b8051909150156120cc578051602090910120919050565b60665480156120825792915050565b6120e481611be2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610d5483836040518060600160405280602781526020016128b960279139612265565b42831580159061217f57506001600160a01b038516600090815260cc602090815260408083206000198801845290915290205463ffffffff8281169116145b156121b6576001600160a01b038516600090815260cc6020908152604080832060001988018452909152902060010182905561221a565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a16600081815260cc84528681208b825284528681209551865463ffffffff191695169490941785559051600194850155825260cd90529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b6060600080856001600160a01b0316856040516122829190612802565b600060405180830381855af49150503d80600081146122bd576040519150601f19603f3d011682016040523d82523d6000602084013e6122c2565b606091505b50915091506122d3868383876122dd565b9695505050505050565b60608315612349578251612342576001600160a01b0385163b6123425760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107b4565b5081611add565b611add838381511561235e5781518083602001fd5b8060405162461bcd60e51b81526004016107b491906123d0565b60005b8381101561239357818101518382015260200161237b565b838111156113c15750506000910152565b600081518084526123bc816020860160208601612378565b601f01601f19169290920160200192915050565b602081526000610d5460208301846123a4565b80356001600160a01b03811681146123fa57600080fd5b919050565b6000806040838503121561241257600080fd5b61241b836123e3565b946020939093013593505050565b60008060006060848603121561243e57600080fd5b612447846123e3565b9250612455602085016123e3565b9150604084013590509250925092565b60006020828403121561247757600080fd5b610d54826123e3565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156124a957600080fd5b6124b2836123e3565b9150602083013567ffffffffffffffff808211156124cf57600080fd5b818501915085601f8301126124e357600080fd5b8135818111156124f5576124f5612480565b604051601f8201601f19908116603f0116810190838211818310171561251d5761251d612480565b8160405282815288602084870101111561253657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60ff60f81b881681526000602060e08184015261257860e084018a6123a4565b838103604085015261258a818a6123a4565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156125dc578351835292840192918401916001016125c0565b50909c9b505050505050505050505050565b803560ff811681146123fa57600080fd5b60008060008060008060c0878903121561261857600080fd5b612621876123e3565b9550602087013594506040870135935061263d606088016125ee565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561267257600080fd5b61267b886123e3565b9650612689602089016123e3565b955060408801359450606088013593506126a5608089016125ee565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156126d457600080fd5b6126dd836123e3565b91506126eb602084016123e3565b90509250929050565b60006020828403121561270657600080fd5b610d54826125ee565b600181811c9082168061272357607f821691505b60208210811415611b0757634e487b7160e01b600052602260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600082198211156127fd57634e487b7160e01b600052601160045260246000fd5b500190565b60008251612814818460208701612378565b9190910192915050565b60006020828403121561283057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fff564ba62eb217968f6be2b7e55c93257efcbfa5926cb6213b96852c2082f5764736f6c634300080c0033";

type BaalLessSharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaalLessSharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaalLessShares__factory extends ContractFactory {
  constructor(...args: BaalLessSharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaalLessShares> {
    return super.deploy(overrides || {}) as Promise<BaalLessShares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaalLessShares {
    return super.attach(address) as BaalLessShares;
  }
  override connect(signer: Signer): BaalLessShares__factory {
    return super.connect(signer) as BaalLessShares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaalLessSharesInterface {
    return new utils.Interface(_abi) as BaalLessSharesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaalLessShares {
    return new Contract(address, _abi, signerOrProvider) as BaalLessShares;
  }
}
