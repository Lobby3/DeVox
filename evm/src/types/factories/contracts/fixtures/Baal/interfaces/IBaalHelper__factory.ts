/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IBaalHelper,
  IBaalHelperInterface,
} from "../../../../../contracts/fixtures/Baal/interfaces/IBaalHelper";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transactions",
        type: "bytes",
      },
    ],
    name: "hashOperation",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "prevProposalId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingStarts",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "graceEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiration",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "baalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAndLootAtVote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAtSponsor",
            type: "uint256",
          },
          {
            internalType: "bool[4]",
            name: "status",
            type: "bool[4]",
          },
          {
            internalType: "address",
            name: "sponsor",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BaalTypes.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    name: "proposalState",
    outputs: [
      {
        internalType: "enum BaalTypes.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lootToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "ragequitTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBaalHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IBaalHelperInterface {
    return new utils.Interface(_abi) as IBaalHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBaalHelper {
    return new Contract(address, _abi, signerOrProvider) as IBaalHelper;
  }
}
