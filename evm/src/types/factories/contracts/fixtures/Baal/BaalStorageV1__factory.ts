/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  BaalStorageV1,
  BaalStorageV1Interface,
} from "../../../../contracts/fixtures/Baal/BaalStorageV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
    ],
    name: "getMemberVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "prevProposalId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingStarts",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "graceEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiration",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "baalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAndLootAtVote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAtSponsor",
            type: "uint256",
          },
          {
            internalType: "bool[4]",
            name: "status",
            type: "bool[4]",
          },
          {
            internalType: "address",
            name: "sponsor",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BaalTypes.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "getVotingNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "incrementVotingNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
    ],
    name: "setMemberVoted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "prevProposalId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingStarts",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "votingEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "graceEnds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiration",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "baalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAndLootAtVote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSharesAtSponsor",
            type: "uint256",
          },
          {
            internalType: "bool[4]",
            name: "status",
            type: "bool[4]",
          },
          {
            internalType: "address",
            name: "sponsor",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "proposalDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BaalTypes.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    name: "setProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "setVotingNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a04806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631049c7bd14610072578063114f00ab146100875780631fd89b08146100b057806355874d6b146100ff578063672f25c91461014857806375baae0014610172578063e20a2afb146101a9575b600080fd5b6100856100803660046105e3565b6101bc565b005b61009a610095366004610619565b6101e8565b6040516100a7919061065f565b60405180910390f35b6100ef6100be366004610756565b6001600160a01b03821660009081526020818152604080832063ffffffff8516845290915290205460ff1692915050565b60405190151581526020016100a7565b61008561010d366004610799565b6001600160a01b0390921660009081526020818152604080832063ffffffff909416835292905220805491151560ff19909216919091179055565b6100856101563660046107dc565b6001600160a01b03909116600090815260016020526040902055565b61019b6101803660046105e3565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100a7565b6100856101b73660046108bb565b610314565b6001600160a01b03811660009081526001602052604081208054916101e0836109a5565b919050555050565b6101f0610469565b63ffffffff828116600090815260026020818152604080842081516101c081018352815480881682526401000000008104881694820194909452600160401b8404871681840152600160601b840487166060820152600160801b84048716608080830191909152600160a01b90940490961660a0870152600181015460c08701529283015460e0860152600383015461010086015260048084015461012087015260058401546101408701528151928301918290529293610160860193600686019290918390855b825461010083900a900460ff1615158152602060019283018181049485019490930390920291018084116102b85750505092845250505060078201546001600160a01b0316602082015260089091015460409091015292915050565b805163ffffffff9081166000908152600260208181526040928390208551815492870151948701516060880151608089015160a08a01518916600160a01b0263ffffffff60a01b19918a16600160801b029190911667ffffffffffffffff60801b19928a16600160601b0263ffffffff60601b19948b16600160401b029490941667ffffffffffffffff60401b19998b166401000000000267ffffffffffffffff1990981695909a169490941795909517969096169690961795909517939093169390931792909217815560c0830151600182015560e08301519181019190915561010082015160038201556101208201516004808301919091556101408301516005830155610160830151839291610431916006840191610502565b506101808201516007820180546001600160a01b0319166001600160a01b039092169190911790556101a09091015160089091015550565b604051806101c00160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016104ee610594565b815260006020820181905260409091015290565b6001830191839082156105845791602002820160005b8382111561055557835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302610518565b80156105825782816101000a81549060ff0219169055600101602081600001049283019260010302610555565b505b506105909291506105b2565b5090565b60405180608001604052806004906020820280368337509192915050565b5b8082111561059057600081556001016105b3565b80356001600160a01b03811681146105de57600080fd5b919050565b6000602082840312156105f557600080fd5b6105fe826105c7565b9392505050565b803563ffffffff811681146105de57600080fd5b60006020828403121561062b57600080fd5b6105fe82610605565b8060005b60048110156106595781511515845260209384019390910190600101610638565b50505050565b815163ffffffff16815261022081016020830151610685602084018263ffffffff169052565b50604083015161069d604084018263ffffffff169052565b5060608301516106b5606084018263ffffffff169052565b5060808301516106cd608084018263ffffffff169052565b5060a08301516106e560a084018263ffffffff169052565b5060c0838101519083015260e080840151908301526101008084015190830152610120808401519083015261014080840151908301526101608084015161072e82850182610634565b50506101808301516001600160a01b03166101e08301526101a0909201516102009091015290565b6000806040838503121561076957600080fd5b610772836105c7565b915061078060208401610605565b90509250929050565b803580151581146105de57600080fd5b6000806000606084860312156107ae57600080fd5b6107b7846105c7565b92506107c560208501610605565b91506107d360408501610789565b90509250925092565b600080604083850312156107ef57600080fd5b6107f8836105c7565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516101c0810167ffffffffffffffff8111828210171561084057610840610806565b60405290565b600082601f83011261085757600080fd5b6040516080810181811067ffffffffffffffff8211171561087a5761087a610806565b60405280608084018581111561088f57600080fd5b845b818110156108b0576108a281610789565b835260209283019201610891565b509195945050505050565b600061022082840312156108ce57600080fd5b6108d661081c565b6108df83610605565b81526108ed60208401610605565b60208201526108fe60408401610605565b604082015261090f60608401610605565b606082015261092060808401610605565b608082015261093160a08401610605565b60a082015260c0838101359082015260e0808401359082015261010080840135908201526101208084013590820152610140808401359082015261016061097a85828601610846565b9082015261098b6101e084016105c7565b61018082015261020092909201356101a083015250919050565b60006000198214156109c757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f9159e6433f40cc4c60ae3219d78f3476218a8654f0c3f5877f37f984f018e6c64736f6c634300080c0033";

type BaalStorageV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaalStorageV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaalStorageV1__factory extends ContractFactory {
  constructor(...args: BaalStorageV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaalStorageV1> {
    return super.deploy(overrides || {}) as Promise<BaalStorageV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaalStorageV1 {
    return super.attach(address) as BaalStorageV1;
  }
  override connect(signer: Signer): BaalStorageV1__factory {
    return super.connect(signer) as BaalStorageV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaalStorageV1Interface {
    return new utils.Interface(_abi) as BaalStorageV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaalStorageV1 {
    return new Contract(address, _abi, signerOrProvider) as BaalStorageV1;
  }
}
