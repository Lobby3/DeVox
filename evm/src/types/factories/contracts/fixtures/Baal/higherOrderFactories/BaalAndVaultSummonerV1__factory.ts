/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  BaalAndVaultSummonerV1,
  BaalAndVaultSummonerV1Interface,
} from "../../../../../contracts/fixtures/Baal/higherOrderFactories/BaalAndVaultSummonerV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "SetDelegate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "daoAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "vaultAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct BaalAndVaultSummonerV1.Vault",
        name: "vault",
        type: "tuple",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "summoner",
        type: "address",
      },
    ],
    name: "setSummoner",
    type: "event",
  },
  {
    inputs: [],
    name: "_baalSummoner",
    outputs: [
      {
        internalType: "contract IBaalSummoner",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
    ],
    name: "deactivateVaultAsDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNewVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baalSummoner",
        type: "address",
      },
    ],
    name: "setSummonerAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializationParams",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "initializationActions",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "referrer",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "summonBaalAndVault",
    outputs: [
      {
        internalType: "address",
        name: "_daoAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "summonVault",
    outputs: [
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultIdx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611aee61004c60003960008181610478015281816104b8015281816105410152818161058101526105f90152611aee6000f3fe6080604052600436106100e95760003560e01c80638129fc1c116100855780638129fc1c146102275780638c64ea4a1461023c5780638da5cb5b1461026d578063a156d8631461028b578063ac06a9a9146102cb578063b395f086146102eb578063bb6decc81461030b578063bedfb8d41461032b578063f2fde38b1461034157600080fd5b8063133afcc0146100ee57806314b630f9146101105780633659cfe6146101465780634f1ef2861461016657806352d1902d14610179578063587cde1e1461019c5780635c873849146101d2578063619dd5d4146101f2578063715018a614610212575b600080fd5b3480156100fa57600080fd5b5061010e6101093660046112bd565b610361565b005b34801561011c57600080fd5b5060c954610130906001600160a01b031681565b60405161013d91906112ed565b60405180910390f35b34801561015257600080fd5b5061010e610161366004611301565b61046d565b61010e6101743660046113a9565b610536565b34801561018557600080fd5b5061018e6105ec565b60405190815260200161013d565b3480156101a857600080fd5b506101306101b7366004611301565b60cc602052600090815260409020546001600160a01b031681565b3480156101de57600080fd5b5061010e6101ed36600461140c565b61069a565b3480156101fe57600080fd5b5061010e61020d36600461143a565b610747565b34801561021e57600080fd5b5061010e610759565b34801561023357600080fd5b5061010e61076d565b34801561024857600080fd5b5061025c610257366004611464565b61088b565b60405161013d9594939291906114d5565b34801561027957600080fd5b506033546001600160a01b0316610130565b34801561029757600080fd5b506102ab6102a6366004611585565b610956565b604080516001600160a01b0393841681529290911660208301520161013d565b3480156102d757600080fd5b506101306102e6366004611656565b6109f2565b3480156102f757600080fd5b5061010e61030636600461169b565b610a79565b34801561031757600080fd5b5061010e610326366004611301565b610a91565b34801561033757600080fd5b5061018e60ca5481565b34801561034d57600080fd5b5061010e61035c366004611301565b610b29565b336001600160a01b038216148061039157506001600160a01b03818116600090815260cc60205260409020541633145b6103d85760405162461bcd60e51b81526020600482015260136024820152726e6f742044414f206f722064656c656761746560681b60448201526064015b60405180910390fd5b600082815260cb60205260409020600101546001600160a01b038281166101009092041614801561041a5750600082815260cb602052604090206001015460ff165b61045e5760405162461bcd60e51b8152602060048201526015602482015274085b9bdd081858dd1a5d9948111053c81d985d5b1d605a1b60448201526064016103cf565b610469826000610b9f565b5050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104b65760405162461bcd60e51b81526004016103cf906116fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104e8610bec565b6001600160a01b03161461050e5760405162461bcd60e51b81526004016103cf90611748565b61051781610c08565b6040805160008082526020820190925261053391839190610c10565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561057f5760405162461bcd60e51b81526004016103cf906116fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105b1610bec565b6001600160a01b0316146105d75760405162461bcd60e51b81526004016103cf90611748565b6105e082610c08565b61046982826001610c10565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106875760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016103cf565b50600080516020611a7283398151915290565b336001600160a01b038316146106db5760405162461bcd60e51b81526004016103cf906020808252600490820152632144414f60e01b604082015260600190565b6001600160a01b03828116600081815260cc602090815260409182902080546001600160a01b031916948616948517905581519283528201929092527fbeebfeebc9d1af8057ca45af36b2171fea34cb5b251e394f0bc5fcabde119d7f91015b60405180910390a15050565b61074f610d7b565b6104698282610b9f565b610761610d7b565b61076b6000610dd5565b565b600054610100900460ff161580801561078d5750600054600160ff909116105b806107a75750303b1580156107a7575060005460ff166001145b61080a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103cf565b6000805460ff19166001179055801561082d576000805461ff0019166101001790555b610835610e27565b61083d610e56565b600060ca558015610533576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60cb602052600090815260409020805460018201546002830154600384018054939460ff8416946101009094046001600160a01b03908116949316929091906108d390611794565b80601f01602080910402602001604051908101604052809291908181526020018280546108ff90611794565b801561094c5780601f106109215761010080835404028352916020019161094c565b820191906000526020600020905b81548152906001019060200180831161092f57829003601f168201915b5050505050905085565b60c95460405163209f369560e01b815260009182916001600160a01b039091169063209f369590610995908c908c908c908c908c908c906004016117f8565b6020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d891906118b2565b91506109e482846109f2565b905097509795505050505050565b60c954604051633e2108c760e21b81526000916001600160a01b03169063f884231c90610a239086906004016112ed565b6020604051808303816000875af1158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6691906118b2565b9050610a73828483610e7d565b92915050565b610a81610d7b565b610a8c818484610e7d565b505050565b610a99610d7b565b6001600160a01b038116610ade5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016103cf565b60c980546001600160a01b0319166001600160a01b0383161790556040517ff471c7a7115723e1d5e0a3b924bec97596831b94082a24d73c8c3210c6cb3b06906108809083906112ed565b610b31610d7b565b6001600160a01b038116610b965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cf565b61053381610dd5565b600082815260cb60205260409081902060018101805460ff191684151517905590517f70720885c820c73facaa75bc2669991b591d9fd2a1e2507a4a9a8022f9336f789161073b916118cf565b600080516020611a72833981519152546001600160a01b031690565b610533610d7b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c4357610a8c83610f9a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c9d575060408051601f3d908101601f19168201909252610c9a918101906119b8565b60015b610d005760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103cf565b600080516020611a728339815191528114610d6f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103cf565b50610a8c838383611036565b6033546001600160a01b0316331461076b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cf565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e4e5760405162461bcd60e51b81526004016103cf906119d1565b61076b611061565b600054610100900460ff1661076b5760405162461bcd60e51b81526004016103cf906119d1565b600160ca6000828254610e909190611a1c565b90915550506040805160a08101825260ca54808252600160208084018281526001600160a01b0388811686880190815288821660608801908152608088018c8152600097885260cb865298909620875181559251948301805491516001600160a81b0319909216951515610100600160a81b03191695909517610100918316919091021790935592516002840180546001600160a01b03191691909316179091559251805192939192610f49926003850192019061120f565b505060ca54600090815260cb60205260409081902090517f70720885c820c73facaa75bc2669991b591d9fd2a1e2507a4a9a8022f9336f789250610f8d91906118cf565b60405180910390a1505050565b6001600160a01b0381163b6110075760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103cf565b600080516020611a7283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61103f83611091565b60008251118061104c5750805b15610a8c5761105b83836110d1565b50505050565b600054610100900460ff166110885760405162461bcd60e51b81526004016103cf906119d1565b61076b33610dd5565b61109a81610f9a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6111395760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103cf565b600080846001600160a01b0316846040516111549190611a42565b600060405180830381855af49150503d806000811461118f576040519150601f19603f3d011682016040523d82523d6000602084013e611194565b606091505b50915091506111bc8282604051806060016040528060278152602001611a92602791396111c5565b95945050505050565b606083156111d45750816111de565b6111de83836111e5565b9392505050565b8151156111f55781518083602001fd5b8060405162461bcd60e51b81526004016103cf9190611a5e565b82805461121b90611794565b90600052602060002090601f01602090048101928261123d5760008555611283565b82601f1061125657805160ff1916838001178555611283565b82800160010185558215611283579182015b82811115611283578251825591602001919060010190611268565b5061128f929150611293565b5090565b5b8082111561128f5760008155600101611294565b6001600160a01b038116811461053357600080fd5b600080604083850312156112d057600080fd5b8235915060208301356112e2816112a8565b809150509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561131357600080fd5b81356111de816112a8565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561134e5761134e61131e565b604051601f8501601f19908116603f011681019082821181831017156113765761137661131e565b8160405280935085815286868601111561138f57600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156113bc57600080fd5b82356113c7816112a8565b915060208301356001600160401b038111156113e257600080fd5b8301601f810185136113f357600080fd5b61140285823560208401611334565b9150509250929050565b6000806040838503121561141f57600080fd5b823561142a816112a8565b915060208301356112e2816112a8565b6000806040838503121561144d57600080fd5b82359150602083013580151581146112e257600080fd5b60006020828403121561147657600080fd5b5035919050565b60005b83811015611498578181015183820152602001611480565b8381111561105b5750506000910152565b600081518084526114c181602086016020860161147d565b601f01601f19169290920160200192915050565b85815284151560208201526001600160a01b0384811660408301528316606082015260a06080820181905260009061150f908301846114a9565b979650505050505050565b60008083601f84011261152c57600080fd5b5081356001600160401b0381111561154357600080fd5b6020830191508360208260051b850101111561155e57600080fd5b9250929050565b600082601f83011261157657600080fd5b6111de83833560208501611334565b600080600080600080600060a0888a0312156115a057600080fd5b87356001600160401b03808211156115b757600080fd5b818a0191508a601f8301126115cb57600080fd5b8135818111156115da57600080fd5b8b60208285010111156115ec57600080fd5b60209283019950975090890135908082111561160757600080fd5b6116138b838c0161151a565b909750955060408a0135945060608a0135935060808a013591508082111561163a57600080fd5b506116478a828b01611565565b91505092959891949750929550565b6000806040838503121561166957600080fd5b8235611674816112a8565b915060208301356001600160401b0381111561168f57600080fd5b61140285828601611565565b6000806000606084860312156116b057600080fd5b83356116bb816112a8565b925060208401356116cb816112a8565b915060408401356001600160401b038111156116e657600080fd5b6116f286828701611565565b9150509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c908216806117a857607f821691505b602082108114156117c957634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60808152600061180c60808301888a6117cf565b602083820381850152818783528183019050818860051b8401018960005b8a81101561189857858303601f190184528135368d9003601e1901811261185057600080fd5b8c0180356001600160401b0381111561186857600080fd5b8036038e131561187757600080fd5b61188485828985016117cf565b95870195945050509084019060010161182a565b505060408601979097525050505060600152949350505050565b6000602082840312156118c457600080fd5b81516111de816112a8565b602080825282548282015260018084015460ff81161515604085015260081c6001600160a01b039081166060850152600285015416608084015260a080840152600384018054600093929190849080841c8185168061192f57607f821691505b86821081141561194d57634e487b7160e01b84526022600452602484fd5b60c0890182905260e0890181801561196c576001811461197d576119a8565b60ff198516825288820195506119a8565b60008781526020902060005b858110156119a257815484820152908901908a01611989565b83019650505b50939a9950505050505050505050565b6000602082840312156119ca57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115611a3d57634e487b7160e01b600052601160045260246000fd5b500190565b60008251611a5481846020870161147d565b9190910192915050565b6020815260006111de60208301846114a956fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200e3d46fc3b72519a6aaf8de3a1358c22038b97f18bc0f968bec0ff89ff5f1b1c64736f6c634300080c0033";

type BaalAndVaultSummonerV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaalAndVaultSummonerV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaalAndVaultSummonerV1__factory extends ContractFactory {
  constructor(...args: BaalAndVaultSummonerV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaalAndVaultSummonerV1> {
    return super.deploy(overrides || {}) as Promise<BaalAndVaultSummonerV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaalAndVaultSummonerV1 {
    return super.attach(address) as BaalAndVaultSummonerV1;
  }
  override connect(signer: Signer): BaalAndVaultSummonerV1__factory {
    return super.connect(signer) as BaalAndVaultSummonerV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaalAndVaultSummonerV1Interface {
    return new utils.Interface(_abi) as BaalAndVaultSummonerV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaalAndVaultSummonerV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaalAndVaultSummonerV1;
  }
}
