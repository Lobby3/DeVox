/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxShamanV1,
  DeVoxShamanV1Interface,
} from "../../../contracts/shaman/DeVoxShamanV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611bcc6101186000396000818161034e015281816103970152818161045e0152818161049e015261051a0152611bcc6000f3fe6080604052600436106101045760003560e01c80638da5cb5b116100a0578063e5a2a2a511610064578063e5a2a2a5146102b1578063e66825c3146102d7578063f2fde38b146102ed578063f8d287681461030d578063fc0c546a1461032357600080fd5b80638da5cb5b1461020e578063af640d0f14610235578063b480eac01461024b578063cc6cb19a1461026c578063d4b839921461029a57600080fd5b80633659cfe61461010957806348c02dc11461012b5780634f1ef2861461014057806352d1902d1461015357806354fd4d501461017b578063715018a61461019457806382b2e257146101a957806386489ba9146101be5780638d59d1f1146101ee575b600080fd5b34801561011557600080fd5b50610129610124366004611523565b610343565b005b34801561013757600080fd5b50610129610415565b61012961014e366004611556565b610453565b34801561015f57600080fd5b5061016861050d565b6040519081526020015b60405180910390f35b34801561018757600080fd5b5060fb5461ffff16610168565b3480156101a057600080fd5b506101296105bb565b3480156101b557600080fd5b506101686105cf565b3480156101ca57600080fd5b506101de6101d936600461161a565b6106b7565b6040519015158152602001610172565b3480156101fa57600080fd5b50610129610209366004611673565b61089c565b34801561021a57600080fd5b506033546001600160a01b03165b60405161017291906116ef565b34801561024157600080fd5b5061016860fd5481565b34801561025757600080fd5b50610129610266366004611703565b61010055565b34801561027857600080fd5b50610168610287366004611523565b6101016020526000908152604090205481565b3480156102a657600080fd5b506101686101005481565b3480156102bd57600080fd5b5060fb54610228906201000090046001600160a01b031681565b3480156102e357600080fd5b5061016860fe5481565b3480156102f957600080fd5b50610129610308366004611523565b610c0d565b34801561031957600080fd5b5061016860ff5481565b34801561032f57600080fd5b5060fc54610228906001600160a01b031681565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103955760405162461bcd60e51b815260040161038c9061171c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103c7610c83565b6001600160a01b0316146103ed5760405162461bcd60e51b815260040161038c90611768565b6103f681610c9f565b6040805160008082526020820190925261041291839190610ca7565b50565b61041d610e12565b60fb80546001919060009061043790849061ffff166117ca565b92506101000a81548161ffff021916908361ffff160217905550565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561049c5760405162461bcd60e51b815260040161038c9061171c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104ce610c83565b6001600160a01b0316146104f45760405162461bcd60e51b815260040161038c90611768565b6104fd82610c9f565b61050982826001610ca7565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161038c565b50600080516020611b0e83398151915290565b6105c3610e12565b6105cd6000610e6c565b565b60fc5460fb5460408051636a5c1cc960e11b815290516000936001600160a01b03908116936370a0823193620100009091049091169163d4b8399291600480820192602092909190829003018189875af1158015610631573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065591906117f0565b6040518263ffffffff1660e01b815260040161067191906116ef565b602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b2919061180d565b905090565b60008054610100900460ff16158080156106d85750600054600160ff909116105b806106f25750303b1580156106f2575060005460ff166001145b6107555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161038c565b6000805460ff191660011790558015610778576000805461ff0019166101001790555b610780610ebe565b610788610eed565b60fb805462010000600160b01b031916620100006001600160a01b038b8116919091029190911790915560fc80546001600160a01b03191691891691909117905560fd86905560fe85905560ff8490556101008390556040805180820190915260208082527f4465566f785368616d616e563120696e697469616c697a65642061743a2025739082015261081c9030610f14565b610847604051806080016040528060428152602001611b556042913960fe5460ff5461010054610f59565b600191508015610891576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b509695505050505050565b6108a4610fa8565b60fb546201000090046001600160a01b03166108ea5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b604482015260640161038c565b60fb5460405163f3ae241560e01b8152620100009091046001600160a01b03169063f3ae24159061091f9030906004016116ef565b6020604051808303816000875af115801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190611826565b6109a35760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b604482015260640161038c565b60fe546109b0908461185e565b156109ee5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640161038c565b60fc5460fb5460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd933393620100009091049091169163d4b839929160048082019260209290919082900301816000875af1158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7491906117f0565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018690526064016020604051808303816000875af1158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec9190611826565b610b2a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161038c565b6000610b3584611002565b9050610b4333826000611025565b6000610b4e856111b0565b9050610b5c33826001611025565b3360009081526101016020526040902054610b778682611872565b3360008181526101016020526040902082905560fb5460fd546101005493945091927ff04885d0e4a85ff9facb1781f4ac658cdb9bf783b710500eac6f0a07709ee96292620100009092046001600160a01b031691908a908690610bd96105cf565b8a8a8e8e604051610bf39a9998979695949392919061188a565b60405180910390a2505050610c086001606555565b505050565b610c15610e12565b6001600160a01b038116610c7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161038c565b61041281610e6c565b600080516020611b0e833981519152546001600160a01b031690565b610412610e12565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cda57610c08836111cb565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d34575060408051601f3d908101601f19168201909252610d319181019061180d565b60015b610d975760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161038c565b600080516020611b0e8339815191528114610e065760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161038c565b50610c08838383611267565b6033546001600160a01b031633146105cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ee55760405162461bcd60e51b815260040161038c906118ff565b6105cd61128c565b600054610100900460ff166105cd5760405162461bcd60e51b815260040161038c906118ff565b6105098282604051602401610f2a9291906119a2565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526112bc565b610fa284848484604051602401610f7394939291906119cc565b60408051601f198184030181529190526020810180516001600160e01b031663a7a8785360e01b1790526112bc565b50505050565b60026065541415610ffb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161038c565b6002606555565b600060ff5460fe548361101591906119fb565b61101f9190611a0f565b92915050565b60408051600180825281830190925260009160208083019080368337019050509050838160008151811061105b5761105b611a2e565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905083816000815181106110ac576110ac611a2e565b602090810291909101015260018360018111156110cb576110cb611a44565b141561113f5760fb54604051632c78fd0360e21b8152620100009091046001600160a01b03169063b1e3f40c906111089085908590600401611a5a565b600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b505050506111a9565b60fb546040516322936c2360e11b8152620100009091046001600160a01b031690634526d846906111769085908590600401611a5a565b600060405180830381600087803b15801561119057600080fd5b505af11580156111a4573d6000803e3d6000fd5b505050505b5050505050565b600060ff5460fe546111c1846112dd565b61101591906119fb565b6001600160a01b0381163b6112385760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161038c565b600080516020611b0e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61127083611382565b60008251118061127d5750805b15610c0857610fa283836113c2565b600054610100900460ff166112b35760405162461bcd60e51b815260040161038c906118ff565b6105cd33610e6c565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60b581600160881b81106112f65760409190911b9060801c5b600160481b811061130c5760209190911b9060401c5b6501000000000081106113245760109190911b9060201c5b6301000000811061133a5760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561137d5781045b919050565b61138b816111cb565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606113e78383604051806060016040528060278152602001611b2e602791396113ee565b9392505050565b6060600080856001600160a01b03168560405161140b9190611ade565b600060405180830381855af49150503d8060008114611446576040519150601f19603f3d011682016040523d82523d6000602084013e61144b565b606091505b509150915061145c86838387611466565b9695505050505050565b606083156114d25782516114cb576001600160a01b0385163b6114cb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038c565b50816114dc565b6114dc83836114e4565b949350505050565b8151156114f45781518083602001fd5b8060405162461bcd60e51b815260040161038c9190611afa565b6001600160a01b038116811461041257600080fd5b60006020828403121561153557600080fd5b81356113e78161150e565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561156957600080fd5b82356115748161150e565b9150602083013567ffffffffffffffff8082111561159157600080fd5b818501915085601f8301126115a557600080fd5b8135818111156115b7576115b7611540565b604051601f8201601f19908116603f011681019083821181831017156115df576115df611540565b816040528281528860208487010111156115f857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060c0878903121561163357600080fd5b863561163e8161150e565b9550602087013561164e8161150e565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006040848603121561168857600080fd5b83359250602084013567ffffffffffffffff808211156116a757600080fd5b818601915086601f8301126116bb57600080fd5b8135818111156116ca57600080fd5b8760208285010111156116dc57600080fd5b6020830194508093505050509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561171557600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156117e7576117e76117b4565b01949350505050565b60006020828403121561180257600080fd5b81516113e78161150e565b60006020828403121561181f57600080fd5b5051919050565b60006020828403121561183857600080fd5b815180151581146113e757600080fd5b634e487b7160e01b600052601260045260246000fd5b60008261186d5761186d611848565b500690565b60008219821115611885576118856117b4565b500190565b600061012060018060a01b038d1683528b60208401528a60408401528960608401528860808401528760a08401528660c08401528560e0840152806101008401528381840152506101408385828501376000838501820152601f909301601f19169091019091019a9950505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561196557818101518382015260200161194d565b83811115610fa25750506000910152565b6000815180845261198e81602086016020860161194a565b601f01601f19169290920160200192915050565b6040815260006119b56040830185611976565b905060018060a01b03831660208301529392505050565b6080815260006119df6080830187611976565b6020830195909552506040810192909252606090910152919050565b600082611a0a57611a0a611848565b500490565b6000816000190483118215151615611a2957611a296117b4565b500290565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015611a9c5781516001600160a01b031684529284019290840190600101611a77565b5050508381038285015284518082528583019183019060005b81811015611ad157835183529284019291840191600101611ab5565b5090979650505050505050565b60008251611af081846020870161194a565b9190910192915050565b6020815260006113e7602083018461197656fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65644465566f785368616d616e563120706172616d733a207072696365506572556e69742025642c20746f6b656e73506572556e69742025642c20746172676574202564a26469706673582212201aeab626b267d96c04f22fcc57a7fb4f58be113f27f0b820ce21f89c67c4c57564736f6c634300080c0033";

type DeVoxShamanV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxShamanV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxShamanV1__factory extends ContractFactory {
  constructor(...args: DeVoxShamanV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxShamanV1> {
    return super.deploy(overrides || {}) as Promise<DeVoxShamanV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxShamanV1 {
    return super.attach(address) as DeVoxShamanV1;
  }
  override connect(signer: Signer): DeVoxShamanV1__factory {
    return super.connect(signer) as DeVoxShamanV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxShamanV1Interface {
    return new utils.Interface(_abi) as DeVoxShamanV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxShamanV1 {
    return new Contract(address, _abi, signerOrProvider) as DeVoxShamanV1;
  }
}
