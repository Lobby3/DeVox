/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxShamanV1,
  DeVoxShamanV1Interface,
} from "../../../contracts/shaman/DeVoxShamanV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lootPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sharesPerMember",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lootPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPerMember",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516119096101196000396000818161033e015281816103870152818161044e0152818161048e015261050a01526119096000f3fe6080604052600436106101045760003560e01c80638da5cb5b116100a0578063d4b8399211610064578063d4b83992146102a0578063e5a2a2a5146102b7578063e66825c3146102dd578063f2fde38b146102f3578063fc0c546a1461031357600080fd5b80638da5cb5b146101fe578063b480eac014610225578063b73fe9db14610246578063cc3853b91461025c578063cc6cb19a1461027257600080fd5b80633659cfe61461010957806348c02dc11461012b5780634f1ef2861461014057806352d1902d1461015357806354fd4d501461017b578063715018a61461019457806382b2e257146101a957806386489ba9146101be5780638d59d1f1146101de575b600080fd5b34801561011557600080fd5b5061012961012436600461130f565b610333565b005b34801561013757600080fd5b50610129610405565b61012961014e366004611342565b610443565b34801561015f57600080fd5b506101686104fd565b6040519081526020015b60405180910390f35b34801561018757600080fd5b5060fb5461ffff16610168565b3480156101a057600080fd5b506101296105ab565b3480156101b557600080fd5b506101686105bf565b3480156101ca57600080fd5b506101296101d9366004611406565b6106a7565b3480156101ea57600080fd5b506101296101f936600461145f565b61081c565b34801561020a57600080fd5b506033546001600160a01b03165b60405161017291906114db565b34801561023157600080fd5b506101296102403660046114ef565b61010055565b34801561025257600080fd5b5061016860fe5481565b34801561026857600080fd5b5061016860ff5481565b34801561027e57600080fd5b5061016861028d36600461130f565b6101016020526000908152604090205481565b3480156102ac57600080fd5b506101686101005481565b3480156102c357600080fd5b5060fb54610218906201000090046001600160a01b031681565b3480156102e957600080fd5b5061016860fd5481565b3480156102ff57600080fd5b5061012961030e36600461130f565b610b99565b34801561031f57600080fd5b5060fc54610218906001600160a01b031681565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103855760405162461bcd60e51b815260040161037c90611508565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103b7610c0f565b6001600160a01b0316146103dd5760405162461bcd60e51b815260040161037c90611554565b6103e681610c2b565b6040805160008082526020820190925261040291839190610c33565b50565b61040d610d9e565b60fb80546001919060009061042790849061ffff166115b6565b92506101000a81548161ffff021916908361ffff160217905550565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561048c5760405162461bcd60e51b815260040161037c90611508565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104be610c0f565b6001600160a01b0316146104e45760405162461bcd60e51b815260040161037c90611554565b6104ed82610c2b565b6104f982826001610c33565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105985760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161037c565b5060008051602061188d83398151915290565b6105b3610d9e565b6105bd6000610df8565b565b60fc5460fb5460408051636a5c1cc960e11b815290516000936001600160a01b03908116936370a0823193620100009091049091169163d4b8399291600480820192602092909190829003018189875af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064591906115dc565b6040518263ffffffff1660e01b815260040161066191906114db565b602060405180830381865afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a291906115f9565b905090565b600054610100900460ff16158080156106c75750600054600160ff909116105b806106e15750303b1580156106e1575060005460ff166001145b6107445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161037c565b6000805460ff191660011790558015610767576000805461ff0019166101001790555b61076f610e4a565b610777610e79565b60fb805462010000600160b01b031916620100006001600160a01b038a8116919091029190911790915560fc80546001600160a01b03191691881691909117905560fd85905560fe84905560ff8390556101008290558015610813576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610824610ea0565b60fb546201000090046001600160a01b031661086a5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b604482015260640161037c565b60fb5460405163f3ae241560e01b8152620100009091046001600160a01b03169063f3ae24159061089f9030906004016114db565b6020604051808303816000875af11580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e29190611612565b6109235760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b604482015260640161037c565b60fd54610930908461164a565b1561096e5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640161037c565b600060fd548461097e919061165e565b60fc5460fb5460408051636a5c1cc960e11b815290519394506001600160a01b03928316936323b872dd933393620100009004169163d4b8399291600480830192602092919082900301816000875af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0391906115dc565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018790526064016020604051808303816000875af1158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b9190611612565b610ab95760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161037c565b600060fe5482610ac99190611672565b9050610ad733826000610efa565b33600090815261010160205260408120549081610afe575060ff54610afe33826001610efa565b610b088783611691565b3360008181526101016020526040902082905560fb546101005492945090917f2cb18d63ba841b413965e4778c3d039bad1b37c5a8c1201f7668d4d694610e07916201000090046001600160a01b0316908a908690610b656105bf565b89888e8e604051610b7e999897969594939291906116a9565b60405180910390a250505050610b946001606555565b505050565b610ba1610d9e565b6001600160a01b038116610c065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037c565b61040281610df8565b60008051602061188d833981519152546001600160a01b031690565b610402610d9e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c6657610b9483611085565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cc0575060408051601f3d908101601f19168201909252610cbd918101906115f9565b60015b610d235760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161037c565b60008051602061188d8339815191528114610d925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161037c565b50610b94838383611121565b6033546001600160a01b031633146105bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e715760405162461bcd60e51b815260040161037c90611716565b6105bd61114c565b600054610100900460ff166105bd5760405162461bcd60e51b815260040161037c90611716565b60026065541415610ef35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037c565b6002606555565b604080516001808252818301909252600091602080830190803683370190505090508381600081518110610f3057610f30611761565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508381600081518110610f8157610f81611761565b60209081029190910101526001836001811115610fa057610fa0611777565b14156110145760fb54604051632c78fd0360e21b8152620100009091046001600160a01b03169063b1e3f40c90610fdd908590859060040161178d565b600060405180830381600087803b158015610ff757600080fd5b505af115801561100b573d6000803e3d6000fd5b5050505061107e565b60fb546040516322936c2360e11b8152620100009091046001600160a01b031690634526d8469061104b908590859060040161178d565b600060405180830381600087803b15801561106557600080fd5b505af1158015611079573d6000803e3d6000fd5b505050505b5050505050565b6001600160a01b0381163b6110f25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161037c565b60008051602061188d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61112a8361117c565b6000825111806111375750805b15610b945761114683836111bc565b50505050565b600054610100900460ff166111735760405162461bcd60e51b815260040161037c90611716565b6105bd33610df8565b61118581611085565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6112245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161037c565b600080846001600160a01b03168460405161123f919061183d565b600060405180830381855af49150503d806000811461127a576040519150601f19603f3d011682016040523d82523d6000602084013e61127f565b606091505b50915091506112a782826040518060600160405280602781526020016118ad602791396112b0565b95945050505050565b606083156112bf5750816112c9565b6112c983836112d0565b9392505050565b8151156112e05781518083602001fd5b8060405162461bcd60e51b815260040161037c9190611859565b6001600160a01b038116811461040257600080fd5b60006020828403121561132157600080fd5b81356112c9816112fa565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561135557600080fd5b8235611360816112fa565b9150602083013567ffffffffffffffff8082111561137d57600080fd5b818501915085601f83011261139157600080fd5b8135818111156113a3576113a361132c565b604051601f8201601f19908116603f011681019083821181831017156113cb576113cb61132c565b816040528281528860208487010111156113e457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060c0878903121561141f57600080fd5b863561142a816112fa565b9550602087013561143a816112fa565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006040848603121561147457600080fd5b83359250602084013567ffffffffffffffff8082111561149357600080fd5b818601915086601f8301126114a757600080fd5b8135818111156114b657600080fd5b8760208285010111156114c857600080fd5b6020830194508093505050509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561150157600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156115d3576115d36115a0565b01949350505050565b6000602082840312156115ee57600080fd5b81516112c9816112fa565b60006020828403121561160b57600080fd5b5051919050565b60006020828403121561162457600080fd5b815180151581146112c957600080fd5b634e487b7160e01b600052601260045260246000fd5b60008261165957611659611634565b500690565b60008261166d5761166d611634565b500490565b600081600019048311821515161561168c5761168c6115a0565b500290565b600082198211156116a4576116a46115a0565b500190565b600061010060018060a01b038c1683528a60208401528960408401528860608401528760808401528660a08401528560c08401528060e08401528381840152506101208385828501376000838501820152601f909301601f19169091019091019998505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b604080825283519082018190526000906020906060840190828701845b828110156117cf5781516001600160a01b0316845292840192908401906001016117aa565b5050508381038285015284518082528583019183019060005b81811015611804578351835292840192918401916001016117e8565b5090979650505050505050565b60005b8381101561182c578181015183820152602001611814565b838111156111465750506000910152565b6000825161184f818460208701611811565b9190910192915050565b6020815260008251806020840152611878816040850160208701611811565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ed6f3f37bd3877b2a71a7d426f258b48c1c3ceef162b0c9d2aed1ed7157eea1764736f6c634300080c0033";

type DeVoxShamanV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxShamanV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxShamanV1__factory extends ContractFactory {
  constructor(...args: DeVoxShamanV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxShamanV1> {
    return super.deploy(overrides || {}) as Promise<DeVoxShamanV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxShamanV1 {
    return super.attach(address) as DeVoxShamanV1;
  }
  override connect(signer: Signer): DeVoxShamanV1__factory {
    return super.connect(signer) as DeVoxShamanV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxShamanV1Interface {
    return new utils.Interface(_abi) as DeVoxShamanV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxShamanV1 {
    return new Contract(address, _abi, signerOrProvider) as DeVoxShamanV1;
  }
}
