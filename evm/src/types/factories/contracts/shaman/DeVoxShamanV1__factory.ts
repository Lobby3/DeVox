/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxShamanV1,
  DeVoxShamanV1Interface,
} from "../../../contracts/shaman/DeVoxShamanV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "UserWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baal",
        type: "address",
      },
    ],
    name: "setBaal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611c14610118600039600081816103c901528181610412015281816104d90152818161051901526105950152611c146000f3fe60806040526004361061012a5760003560e01c80638da5cb5b116100ab578063d4b839921161006f578063d4b8399214610315578063e5a2a2a51461032c578063e66825c314610352578063f2fde38b14610368578063f8d2876814610388578063fc0c546a1461039e57600080fd5b80638da5cb5b146102695780639d79450814610290578063af640d0f146102b0578063b480eac0146102c6578063cc6cb19a146102e757600080fd5b806354fd4d50116100f257806354fd4d50146101e6578063715018a6146101ff57806382b2e2571461021457806386489ba9146102295780638d59d1f11461024957600080fd5b80632b3ee5f51461012f5780633659cfe61461017657806348c02dc1146101965780634f1ef286146101ab57806352d1902d146101be575b600080fd5b34801561013b57600080fd5b5061017461014a36600461157c565b60fb80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b005b34801561018257600080fd5b5061017461019136600461157c565b6103be565b3480156101a257600080fd5b50610174610490565b6101746101b93660046115af565b6104ce565b3480156101ca57600080fd5b506101d3610588565b6040519081526020015b60405180910390f35b3480156101f257600080fd5b5060fb5461ffff166101d3565b34801561020b57600080fd5b50610174610636565b34801561022057600080fd5b506101d361064a565b34801561023557600080fd5b50610174610244366004611673565b610732565b34801561025557600080fd5b50610174610264366004611715565b6108a7565b34801561027557600080fd5b506033546001600160a01b03165b6040516101dd9190611761565b34801561029c57600080fd5b506101746102ab366004611783565b610c64565b3480156102bc57600080fd5b506101d360fd5481565b3480156102d257600080fd5b506101746102e13660046117bf565b61010055565b3480156102f357600080fd5b506101d361030236600461157c565b6101016020526000908152604090205481565b34801561032157600080fd5b506101d36101005481565b34801561033857600080fd5b5060fb54610283906201000090046001600160a01b031681565b34801561035e57600080fd5b506101d360fe5481565b34801561037457600080fd5b5061017461038336600461157c565b610d28565b34801561039457600080fd5b506101d360ff5481565b3480156103aa57600080fd5b5060fc54610283906001600160a01b031681565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104105760405162461bcd60e51b8152600401610407906117d8565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610442610d9e565b6001600160a01b0316146104685760405162461bcd60e51b815260040161040790611824565b61047181610dba565b6040805160008082526020820190925261048d91839190610dc2565b50565b610498610f2d565b60fb8054600191906000906104b290849061ffff16611886565b92506101000a81548161ffff021916908361ffff160217905550565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105175760405162461bcd60e51b8152600401610407906117d8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610549610d9e565b6001600160a01b03161461056f5760405162461bcd60e51b815260040161040790611824565b61057882610dba565b61058482826001610dc2565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106235760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610407565b50600080516020611b9883398151915290565b61063e610f2d565b6106486000610f87565b565b60fc5460fb5460408051636a5c1cc960e11b815290516000936001600160a01b03908116936370a0823193620100009091049091169163d4b8399291600480820192602092909190829003018189875af11580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d091906118ac565b6040518263ffffffff1660e01b81526004016106ec9190611761565b602060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906118c9565b905090565b600054610100900460ff16158080156107525750600054600160ff909116105b8061076c5750303b15801561076c575060005460ff166001145b6107cf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610407565b6000805460ff1916600117905580156107f2576000805461ff0019166101001790555b6107fa610fd9565b610802611008565b60fb805462010000600160b01b031916620100006001600160a01b038a8116919091029190911790915560fc80546001600160a01b03191691881691909117905560fd85905560fe84905560ff839055610100829055801561089e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6108af61102f565b336000908152610102602052604090205460ff166109065760405162461bcd60e51b81526020600482015260146024820152731d5cd95c881b9bdd081dda1a5d195b1a5cdd195960621b6044820152606401610407565b60fb546201000090046001600160a01b031661094c5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610407565b60fb5460405163f3ae241560e01b8152620100009091046001600160a01b03169063f3ae241590610981903090600401611761565b6020604051808303816000875af11580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c491906118e2565b610a055760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610407565b60fe54610a129084611915565b15610a505760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610407565b60fc5460fb5460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd933393620100009091049091169163d4b839929160048082019260209290919082900301816000875af1158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad691906118ac565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018690526064016020604051808303816000875af1158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e91906118e2565b610b8c5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610407565b6000610b9a33826000611089565b6000610ba585611214565b9050610bb333826001611089565b3360009081526101016020526040902054610bce8682611929565b3360008181526101016020526040902082905560fb5460fd546101005493945091927ff04885d0e4a85ff9facb1781f4ac658cdb9bf783b710500eac6f0a07709ee96292620100009092046001600160a01b031691908a908690610c3061064a565b8a8a8e8e604051610c4a9a9998979695949392919061196a565b60405180910390a2505050610c5f6001606555565b505050565b336000908152610102602052604090205460ff1615158315151415610ccb5760405162461bcd60e51b815260206004820152601a60248201527f77686974656c6973742073746174757320756e6368616e6765640000000000006044820152606401610407565b336000818152610102602052604090819020805460ff1916861515179055517fc14aba57636c37da4459359c744f88dbb152ff25b6baad0b066ae60b6d30802490610d1b908690869086906119c9565b60405180910390a2505050565b610d30610f2d565b6001600160a01b038116610d955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610407565b61048d81610f87565b600080516020611b98833981519152546001600160a01b031690565b61048d610f2d565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610df557610c5f8361123f565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e4f575060408051601f3d908101601f19168201909252610e4c918101906118c9565b60015b610eb25760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610407565b600080516020611b988339815191528114610f215760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610407565b50610c5f8383836112db565b6033546001600160a01b031633146106485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610407565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110005760405162461bcd60e51b8152600401610407906119ee565b610648611306565b600054610100900460ff166106485760405162461bcd60e51b8152600401610407906119ee565b600260655414156110825760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610407565b6002606555565b6040805160018082528183019092526000916020808301908036833701905050905083816000815181106110bf576110bf611a39565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050838160008151811061111057611110611a39565b6020908102919091010152600183600181111561112f5761112f611a4f565b14156111a35760fb54604051632c78fd0360e21b8152620100009091046001600160a01b03169063b1e3f40c9061116c9085908590600401611a65565b600060405180830381600087803b15801561118657600080fd5b505af115801561119a573d6000803e3d6000fd5b5050505061120d565b60fb546040516322936c2360e11b8152620100009091046001600160a01b031690634526d846906111da9085908590600401611a65565b600060405180830381600087803b1580156111f457600080fd5b505af1158015611208573d6000803e3d6000fd5b505050505b5050505050565b600060ff5461122f60fe548461122a9190611ae9565b611336565b6112399190611afd565b92915050565b6001600160a01b0381163b6112ac5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610407565b600080516020611b9883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6112e4836113db565b6000825111806112f15750805b15610c5f57611300838361141b565b50505050565b600054610100900460ff1661132d5760405162461bcd60e51b8152600401610407906119ee565b61064833610f87565b60b581600160881b811061134f5760409190911b9060801c5b600160481b81106113655760209190911b9060401c5b65010000000000811061137d5760109190911b9060201c5b630100000081106113935760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c8082048111156113d65781045b919050565b6113e48161123f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114408383604051806060016040528060278152602001611bb860279139611447565b9392505050565b6060600080856001600160a01b0316856040516114649190611b48565b600060405180830381855af49150503d806000811461149f576040519150601f19603f3d011682016040523d82523d6000602084013e6114a4565b606091505b50915091506114b5868383876114bf565b9695505050505050565b6060831561152b578251611524576001600160a01b0385163b6115245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610407565b5081611535565b611535838361153d565b949350505050565b81511561154d5781518083602001fd5b8060405162461bcd60e51b81526004016104079190611b64565b6001600160a01b038116811461048d57600080fd5b60006020828403121561158e57600080fd5b813561144081611567565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156115c257600080fd5b82356115cd81611567565b9150602083013567ffffffffffffffff808211156115ea57600080fd5b818501915085601f8301126115fe57600080fd5b81358181111561161057611610611599565b604051601f8201601f19908116603f0116810190838211818310171561163857611638611599565b8160405282815288602084870101111561165157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060c0878903121561168c57600080fd5b863561169781611567565b955060208701356116a781611567565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008083601f8401126116de57600080fd5b50813567ffffffffffffffff8111156116f657600080fd5b60208301915083602082850101111561170e57600080fd5b9250929050565b60008060006040848603121561172a57600080fd5b83359250602084013567ffffffffffffffff81111561174857600080fd5b611754868287016116cc565b9497909650939450505050565b6001600160a01b0391909116815260200190565b801515811461048d57600080fd5b60008060006040848603121561179857600080fd5b83356117a381611775565b9250602084013567ffffffffffffffff81111561174857600080fd5b6000602082840312156117d157600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156118a3576118a3611870565b01949350505050565b6000602082840312156118be57600080fd5b815161144081611567565b6000602082840312156118db57600080fd5b5051919050565b6000602082840312156118f457600080fd5b815161144081611775565b634e487b7160e01b600052601260045260246000fd5b600082611924576119246118ff565b500690565b6000821982111561193c5761193c611870565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600061012060018060a01b038d1683528b60208401528a60408401528960608401528860808401528760a08401528660c08401528560e0840152806101008401526119b88184018587611941565b9d9c50505050505050505050505050565b83151581526040602082015260006119e5604083018486611941565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015611aa75781516001600160a01b031684529284019290840190600101611a82565b5050508381038285015284518082528583019183019060005b81811015611adc57835183529284019291840191600101611ac0565b5090979650505050505050565b600082611af857611af86118ff565b500490565b6000816000190483118215151615611b1757611b17611870565b500290565b60005b83811015611b37578181015183820152602001611b1f565b838111156113005750506000910152565b60008251611b5a818460208701611b1c565b9190910192915050565b6020815260008251806020840152611b83816040850160208701611b1c565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207fe0a435be3d5ac73bae18f05b03f12231189bf5c30139e4dbf1a3f760191d3064736f6c634300080c0033";

type DeVoxShamanV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxShamanV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxShamanV1__factory extends ContractFactory {
  constructor(...args: DeVoxShamanV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxShamanV1> {
    return super.deploy(overrides || {}) as Promise<DeVoxShamanV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxShamanV1 {
    return super.attach(address) as DeVoxShamanV1;
  }
  override connect(signer: Signer): DeVoxShamanV1__factory {
    return super.connect(signer) as DeVoxShamanV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxShamanV1Interface {
    return new utils.Interface(_abi) as DeVoxShamanV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxShamanV1 {
    return new Contract(address, _abi, signerOrProvider) as DeVoxShamanV1;
  }
}
