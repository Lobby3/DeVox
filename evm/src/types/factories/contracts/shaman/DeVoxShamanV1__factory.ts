/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxShamanV1,
  DeVoxShamanV1Interface,
} from "../../../contracts/shaman/DeVoxShamanV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "TargetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "UserWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611c3961011860003960008181610379015281816103c201528181610489015281816104c901526105450152611c396000f3fe60806040526004361061011f5760003560e01c80639d794508116100a0578063e5a2a2a511610064578063e5a2a2a5146102dc578063e66825c314610302578063f2fde38b14610318578063f8d2876814610338578063fc0c546a1461034e57600080fd5b80639d79450814610240578063af640d0f14610260578063b480eac014610276578063cc6cb19a14610297578063d4b83992146102c557600080fd5b8063715018a6116100e7578063715018a6146101af57806382b2e257146101c457806386489ba9146101d95780638d59d1f1146101f95780638da5cb5b1461021957600080fd5b80633659cfe61461012457806348c02dc1146101465780634f1ef2861461015b57806352d1902d1461016e57806354fd4d5014610196575b600080fd5b34801561013057600080fd5b5061014461013f3660046115a1565b61036e565b005b34801561015257600080fd5b50610144610440565b6101446101693660046115d4565b61047e565b34801561017a57600080fd5b50610183610538565b6040519081526020015b60405180910390f35b3480156101a257600080fd5b5060fb5461ffff16610183565b3480156101bb57600080fd5b506101446105e6565b3480156101d057600080fd5b506101836105fa565b3480156101e557600080fd5b506101446101f4366004611698565b6106e2565b34801561020557600080fd5b5061014461021436600461173a565b610857565b34801561022557600080fd5b506033546001600160a01b03165b60405161018d9190611786565b34801561024c57600080fd5b5061014461025b3660046117a8565b610c89565b34801561026c57600080fd5b5061018360fd5481565b34801561028257600080fd5b506101446102913660046117e4565b61010055565b3480156102a357600080fd5b506101836102b23660046115a1565b6101016020526000908152604090205481565b3480156102d157600080fd5b506101836101005481565b3480156102e857600080fd5b5060fb54610233906201000090046001600160a01b031681565b34801561030e57600080fd5b5061018360fe5481565b34801561032457600080fd5b506101446103333660046115a1565b610d4d565b34801561034457600080fd5b5061018360ff5481565b34801561035a57600080fd5b5060fc54610233906001600160a01b031681565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103c05760405162461bcd60e51b81526004016103b7906117fd565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103f2610dc3565b6001600160a01b0316146104185760405162461bcd60e51b81526004016103b790611849565b61042181610ddf565b6040805160008082526020820190925261043d91839190610de7565b50565b610448610f52565b60fb80546001919060009061046290849061ffff166118ab565b92506101000a81548161ffff021916908361ffff160217905550565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104c75760405162461bcd60e51b81526004016103b7906117fd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104f9610dc3565b6001600160a01b03161461051f5760405162461bcd60e51b81526004016103b790611849565b61052882610ddf565b61053482826001610de7565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d35760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016103b7565b50600080516020611bbd83398151915290565b6105ee610f52565b6105f86000610fac565b565b60fc5460fb5460408051636a5c1cc960e11b815290516000936001600160a01b03908116936370a0823193620100009091049091169163d4b8399291600480820192602092909190829003018189875af115801561065c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068091906118d1565b6040518263ffffffff1660e01b815260040161069c9190611786565b602060405180830381865afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd91906118ee565b905090565b600054610100900460ff16158080156107025750600054600160ff909116105b8061071c5750303b15801561071c575060005460ff166001145b61077f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b6000805460ff1916600117905580156107a2576000805461ff0019166101001790555b6107aa610ffe565b6107b261102d565b60fb805462010000600160b01b031916620100006001600160a01b038a8116919091029190911790915560fc80546001600160a01b03191691881691909117905560fd85905560fe84905560ff839055610100829055801561084e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b61085f611054565b60fb546201000090046001600160a01b03166108ad5760405162461bcd60e51b815260206004820152600d60248201526c191bdb985d194e88085898585b609a1b60448201526064016103b7565b60fc546001600160a01b03166108f65760405162461bcd60e51b815260206004820152600e60248201526d3237b730ba329d1010ba37b5b2b760911b60448201526064016103b7565b60fb5460405163f3ae241560e01b8152620100009091046001600160a01b03169063f3ae24159061092b903090600401611786565b6020604051808303816000875af115801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e9190611907565b6109ba5760405162461bcd60e51b815260206004820152601a60248201527f646f6e6174653a207368616d616e206e6f74206d616e6167657200000000000060448201526064016103b7565b336000908152610102602052604090205460ff16610a1a5760405162461bcd60e51b815260206004820152601e60248201527f646f6e6174653a2073656e646572206e6f742077686974656c6973746564000060448201526064016103b7565b60fe54610a27908461193a565b15610a6d5760405162461bcd60e51b8152602060048201526016602482015275191bdb985d194e881a5b9d985b1a5908185b5bdd5b9d60521b60448201526064016103b7565b60fc5460fb5460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd933393620100009091049091169163d4b839929160048082019260209290919082900301816000875af1158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af391906118d1565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018690526064016020604051808303816000875af1158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6b9190611907565b610bb15760405162461bcd60e51b8152602060048201526017602482015276191bdb985d194e881d1c985b9cd9995c8819985a5b1959604a1b60448201526064016103b7565b6000610bbf338260006110ae565b6000610bca85611239565b9050610bd8338260016110ae565b3360009081526101016020526040902054610bf3868261194e565b3360008181526101016020526040902082905560fb5460fd546101005493945091927ff04885d0e4a85ff9facb1781f4ac658cdb9bf783b710500eac6f0a07709ee96292620100009092046001600160a01b031691908a908690610c556105fa565b8a8a8e8e604051610c6f9a9998979695949392919061198f565b60405180910390a2505050610c846001606555565b505050565b336000908152610102602052604090205460ff1615158315151415610cf05760405162461bcd60e51b815260206004820152601a60248201527f77686974656c6973742073746174757320756e6368616e67656400000000000060448201526064016103b7565b336000818152610102602052604090819020805460ff1916861515179055517fc14aba57636c37da4459359c744f88dbb152ff25b6baad0b066ae60b6d30802490610d40908690869086906119ee565b60405180910390a2505050565b610d55610f52565b6001600160a01b038116610dba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b7565b61043d81610fac565b600080516020611bbd833981519152546001600160a01b031690565b61043d610f52565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e1a57610c8483611264565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e74575060408051601f3d908101601f19168201909252610e71918101906118ee565b60015b610ed75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103b7565b600080516020611bbd8339815191528114610f465760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103b7565b50610c84838383611300565b6033546001600160a01b031633146105f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b7565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110255760405162461bcd60e51b81526004016103b790611a13565b6105f861132b565b600054610100900460ff166105f85760405162461bcd60e51b81526004016103b790611a13565b600260655414156110a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103b7565b6002606555565b6040805160018082528183019092526000916020808301908036833701905050905083816000815181106110e4576110e4611a5e565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050838160008151811061113557611135611a5e565b6020908102919091010152600183600181111561115457611154611a74565b14156111c85760fb54604051632c78fd0360e21b8152620100009091046001600160a01b03169063b1e3f40c906111919085908590600401611a8a565b600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b50505050611232565b60fb546040516322936c2360e11b8152620100009091046001600160a01b031690634526d846906111ff9085908590600401611a8a565b600060405180830381600087803b15801561121957600080fd5b505af115801561122d573d6000803e3d6000fd5b505050505b5050505050565b600060ff5461125460fe548461124f9190611b0e565b61135b565b61125e9190611b22565b92915050565b6001600160a01b0381163b6112d15760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103b7565b600080516020611bbd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61130983611400565b6000825111806113165750805b15610c84576113258383611440565b50505050565b600054610100900460ff166113525760405162461bcd60e51b81526004016103b790611a13565b6105f833610fac565b60b581600160881b81106113745760409190911b9060801c5b600160481b811061138a5760209190911b9060401c5b6501000000000081106113a25760109190911b9060201c5b630100000081106113b85760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c8082048111156113fb5781045b919050565b61140981611264565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114658383604051806060016040528060278152602001611bdd6027913961146c565b9392505050565b6060600080856001600160a01b0316856040516114899190611b6d565b600060405180830381855af49150503d80600081146114c4576040519150601f19603f3d011682016040523d82523d6000602084013e6114c9565b606091505b50915091506114da868383876114e4565b9695505050505050565b60608315611550578251611549576001600160a01b0385163b6115495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b7565b508161155a565b61155a8383611562565b949350505050565b8151156115725781518083602001fd5b8060405162461bcd60e51b81526004016103b79190611b89565b6001600160a01b038116811461043d57600080fd5b6000602082840312156115b357600080fd5b81356114658161158c565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156115e757600080fd5b82356115f28161158c565b9150602083013567ffffffffffffffff8082111561160f57600080fd5b818501915085601f83011261162357600080fd5b813581811115611635576116356115be565b604051601f8201601f19908116603f0116810190838211818310171561165d5761165d6115be565b8160405282815288602084870101111561167657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060c087890312156116b157600080fd5b86356116bc8161158c565b955060208701356116cc8161158c565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008083601f84011261170357600080fd5b50813567ffffffffffffffff81111561171b57600080fd5b60208301915083602082850101111561173357600080fd5b9250929050565b60008060006040848603121561174f57600080fd5b83359250602084013567ffffffffffffffff81111561176d57600080fd5b611779868287016116f1565b9497909650939450505050565b6001600160a01b0391909116815260200190565b801515811461043d57600080fd5b6000806000604084860312156117bd57600080fd5b83356117c88161179a565b9250602084013567ffffffffffffffff81111561176d57600080fd5b6000602082840312156117f657600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156118c8576118c8611895565b01949350505050565b6000602082840312156118e357600080fd5b81516114658161158c565b60006020828403121561190057600080fd5b5051919050565b60006020828403121561191957600080fd5b81516114658161179a565b634e487b7160e01b600052601260045260246000fd5b60008261194957611949611924565b500690565b6000821982111561196157611961611895565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600061012060018060a01b038d1683528b60208401528a60408401528960608401528860808401528760a08401528660c08401528560e0840152806101008401526119dd8184018587611966565b9d9c50505050505050505050505050565b8315158152604060208201526000611a0a604083018486611966565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015611acc5781516001600160a01b031684529284019290840190600101611aa7565b5050508381038285015284518082528583019183019060005b81811015611b0157835183529284019291840191600101611ae5565b5090979650505050505050565b600082611b1d57611b1d611924565b500490565b6000816000190483118215151615611b3c57611b3c611895565b500290565b60005b83811015611b5c578181015183820152602001611b44565b838111156113255750506000910152565b60008251611b7f818460208701611b41565b9190910192915050565b6020815260008251806020840152611ba8816040850160208701611b41565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207842f676cead1ddf78b9de6bd26cac4f16b19908b087dbe5f9e887d2d3eb3fa264736f6c634300080c0033";

type DeVoxShamanV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxShamanV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxShamanV1__factory extends ContractFactory {
  constructor(...args: DeVoxShamanV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxShamanV1> {
    return super.deploy(overrides || {}) as Promise<DeVoxShamanV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxShamanV1 {
    return super.attach(address) as DeVoxShamanV1;
  }
  override connect(signer: Signer): DeVoxShamanV1__factory {
    return super.connect(signer) as DeVoxShamanV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxShamanV1Interface {
    return new utils.Interface(_abi) as DeVoxShamanV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxShamanV1 {
    return new Contract(address, _abi, signerOrProvider) as DeVoxShamanV1;
  }
}
