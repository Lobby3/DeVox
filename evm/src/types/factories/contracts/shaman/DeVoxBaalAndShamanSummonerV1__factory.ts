/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxBaalAndShamanSummonerV1,
  DeVoxBaalAndShamanSummonerV1Interface,
} from "../../../contracts/shaman/DeVoxBaalAndShamanSummonerV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "_baalSummoner",
    outputs: [
      {
        internalType: "contract IBaalAdvTokenSummoner",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_shamanSummoner",
    outputs: [
      {
        internalType: "contract IShamanSummoner",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baalSummoner",
        type: "address",
      },
      {
        internalType: "address",
        name: "shamanSummoner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_saltNonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_initializationMintParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_initializationTokenParams",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "_baalInitializationActions",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "_shamanInitializationParams",
        type: "bytes",
      },
    ],
    name: "summonBaalAndShaman",
    outputs: [
      {
        internalType: "address",
        name: "_baalAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shamanAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161165661004c6000396000818161020901528181610252015281816104d201528181610512015261058e01526116566000f3fe6080604052600436106100915760003560e01c8063715018a611610059578063715018a61461014b5780638da5cb5b14610160578063cf9e5fb21461017e578063f19d99f41461019e578063f2fde38b146101de57600080fd5b806314b630f9146100965780633659cfe6146100d3578063485cc955146100f55780634f1ef2861461011557806352d1902d14610128575b600080fd5b3480156100a257600080fd5b5060c9546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100f36100ee366004610faf565b6101fe565b005b34801561010157600080fd5b506100f3610110366004610fcc565b6102d0565b6100f361012336600461101b565b6104c7565b34801561013457600080fd5b5061013d610581565b6040519081526020016100ca565b34801561015757600080fd5b506100f361062f565b34801561016c57600080fd5b506033546001600160a01b03166100b6565b34801561018a57600080fd5b5060ca546100b6906001600160a01b031681565b3480156101aa57600080fd5b506101be6101b9366004611128565b610643565b604080516001600160a01b039384168152929091166020830152016100ca565b3480156101ea57600080fd5b506100f36101f9366004610faf565b610a10565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156102505760405162461bcd60e51b815260040161024790611229565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610282610a86565b6001600160a01b0316146102a85760405162461bcd60e51b815260040161024790611275565b6102b181610aa2565b604080516000808252602082019092526102cd91839190610aaa565b50565b600054610100900460ff16158080156102f05750600054600160ff909116105b8061030a5750303b15801561030a575060005460ff166001145b61036d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610247565b6000805460ff191660011790558015610390576000805461ff0019166101001790555b6001600160a01b0383166103e65760405162461bcd60e51b815260206004820152601a60248201527f6261616c53756d6d6f6e65723a207a65726f20616464726573730000000000006044820152606401610247565b6001600160a01b03821661043c5760405162461bcd60e51b815260206004820152601c60248201527f7368616d616e53756d6d6f6e65723a207a65726f2061646472657373000000006044820152606401610247565b610444610c15565b61044c610c44565b60c980546001600160a01b038086166001600160a01b03199283161790925560ca80549285169290911691909117905580156104c2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105105760405162461bcd60e51b815260040161024790611229565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610542610a86565b6001600160a01b0316146105685760405162461bcd60e51b815260040161024790611275565b61057182610aa2565b61057d82826001610aaa565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461061c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610247565b506000805160206115da83398151915290565b610637610c6b565b6106416000610cc5565b565b60ca5460405163088d827f60e31b815260009182916001600160a01b039091169063446c13f89061067a90879087906004016112ea565b6020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd91906112fe565b90506001600160a01b0381166107155760405162461bcd60e51b815260206004820152601b60248201527f7368616d616e416464726573733a207a65726f206164647265737300000000006044820152606401610247565b6000610722866001611331565b67ffffffffffffffff81111561073a5761073a611005565b60405190808252806020026020018201604052801561076d57816020015b60608152602001906001900390816107585790505b50905060005b868110156108055787878281811061078d5761078d611349565b905060200281019061079f919061135f565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050845185925084915081106107e7576107e7611349565b602002602001018190525080806107fd906113a6565b915050610773565b5060408051600180825281830190925260009160208083019080368337019050509050828160008151811061083c5761083c611349565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060078160008151811061088e5761088e611349565b6020908102919091010152604051630f656a2160e01b906108b590849084906024016113c1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152835184906108f790600190611445565b8151811061090757610907611349565b602002602001018190525060c960009054906101000a90046001600160a01b03166001600160a01b031663eb7a86c38f8f8f8f8f896040518763ffffffff1660e01b815260040161095d969594939291906114b4565b6020604051808303816000875af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906112fe565b604051632b3ee5f560e01b81526001600160a01b03808316600483015291965090851690632b3ee5f590602401600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b50505050505050995099975050505050505050565b610a18610c6b565b6001600160a01b038116610a7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610247565b6102cd81610cc5565b6000805160206115da833981519152546001600160a01b031690565b6102cd610c6b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610add576104c283610d17565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b37575060408051601f3d908101601f19168201909252610b3491810190611546565b60015b610b9a5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610247565b6000805160206115da8339815191528114610c095760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610247565b506104c2838383610db3565b600054610100900460ff16610c3c5760405162461bcd60e51b81526004016102479061155f565b610641610dde565b600054610100900460ff166106415760405162461bcd60e51b81526004016102479061155f565b6033546001600160a01b031633146106415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610247565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b610d845760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610247565b6000805160206115da83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610dbc83610e0e565b600082511180610dc95750805b156104c257610dd88383610e4e565b50505050565b600054610100900460ff16610e055760405162461bcd60e51b81526004016102479061155f565b61064133610cc5565b610e1781610d17565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610e7383836040518060600160405280602781526020016115fa60279139610e7a565b9392505050565b6060600080856001600160a01b031685604051610e9791906115aa565b600060405180830381855af49150503d8060008114610ed2576040519150601f19603f3d011682016040523d82523d6000602084013e610ed7565b606091505b5091509150610ee886838387610ef2565b9695505050505050565b60608315610f5e578251610f57576001600160a01b0385163b610f575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610247565b5081610f68565b610f688383610f70565b949350505050565b815115610f805781518083602001fd5b8060405162461bcd60e51b815260040161024791906115c6565b6001600160a01b03811681146102cd57600080fd5b600060208284031215610fc157600080fd5b8135610e7381610f9a565b60008060408385031215610fdf57600080fd5b8235610fea81610f9a565b91506020830135610ffa81610f9a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561102e57600080fd5b823561103981610f9a565b9150602083013567ffffffffffffffff8082111561105657600080fd5b818501915085601f83011261106a57600080fd5b81358181111561107c5761107c611005565b604051601f8201601f19908116603f011681019083821181831017156110a4576110a4611005565b816040528281528860208487010111156110bd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f8401126110f157600080fd5b50813567ffffffffffffffff81111561110957600080fd5b60208301915083602082850101111561112157600080fd5b9250929050565b600080600080600080600080600060a08a8c03121561114657600080fd5b8935985060208a013567ffffffffffffffff8082111561116557600080fd5b6111718d838e016110df565b909a50985060408c013591508082111561118a57600080fd5b6111968d838e016110df565b909850965060608c01359150808211156111af57600080fd5b818c0191508c601f8301126111c357600080fd5b8135818111156111d257600080fd5b8d60208260051b85010111156111e757600080fd5b6020830196508095505060808c013591508082111561120557600080fd5b506112128c828d016110df565b915080935050809150509295985092959850929598565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610f686020830184866112c1565b60006020828403121561131057600080fd5b8151610e7381610f9a565b634e487b7160e01b600052601160045260246000fd5b600082198211156113445761134461131b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261137657600080fd5b83018035915067ffffffffffffffff82111561139157600080fd5b60200191503681900382131561112157600080fd5b60006000198214156113ba576113ba61131b565b5060010190565b604080825283519082018190526000906020906060840190828701845b828110156114035781516001600160a01b0316845292840192908401906001016113de565b5050508381038285015284518082528583019183019060005b818110156114385783518352928401929184019160010161141c565b5090979650505050505050565b6000828210156114575761145761131b565b500390565b60005b8381101561147757818101518382015260200161145f565b83811115610dd85750506000910152565b600081518084526114a081602086016020860161145c565b601f01601f19169290920160200192915050565b868152600060206080818401526114cf60808401888a6112c1565b83810360408501526114e28187896112c1565b905083810360608501528085518083528383019150838160051b84010184880160005b8381101561153357601f19868403018552611521838351611488565b94870194925090860190600101611505565b50909d9c50505050505050505050505050565b60006020828403121561155857600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516115bc81846020870161145c565b9190910192915050565b602081526000610e73602083018461148856fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f1ac6a09ad19df63c26804b00aed675e6aa93056d6fbe04668767daeb73c6b4164736f6c634300080c0033";

type DeVoxBaalAndShamanSummonerV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxBaalAndShamanSummonerV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxBaalAndShamanSummonerV1__factory extends ContractFactory {
  constructor(...args: DeVoxBaalAndShamanSummonerV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxBaalAndShamanSummonerV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<DeVoxBaalAndShamanSummonerV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxBaalAndShamanSummonerV1 {
    return super.attach(address) as DeVoxBaalAndShamanSummonerV1;
  }
  override connect(signer: Signer): DeVoxBaalAndShamanSummonerV1__factory {
    return super.connect(signer) as DeVoxBaalAndShamanSummonerV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxBaalAndShamanSummonerV1Interface {
    return new utils.Interface(_abi) as DeVoxBaalAndShamanSummonerV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxBaalAndShamanSummonerV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeVoxBaalAndShamanSummonerV1;
  }
}
