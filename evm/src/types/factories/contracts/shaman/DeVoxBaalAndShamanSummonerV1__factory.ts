/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  DeVoxBaalAndShamanSummonerV1,
  DeVoxBaalAndShamanSummonerV1Interface,
} from "../../../contracts/shaman/DeVoxBaalAndShamanSummonerV1";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "_baalSummoner",
    outputs: [
      {
        internalType: "contract IBaalSummoner",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_shamanSummoner",
    outputs: [
      {
        internalType: "contract IShamanSummoner",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baalSummoner",
        type: "address",
      },
      {
        internalType: "address",
        name: "shamanSummoner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_initializationParams",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "_initializationActions",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_saltNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_referrer",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_shamanInitializationParams",
        type: "bytes",
      },
    ],
    name: "summonBaalAndShaman",
    outputs: [
      {
        internalType: "address",
        name: "_baalAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shamanAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161162161004c60003960008181610209015281816102520152818161089c015281816108dc015261095801526116216000f3fe6080604052600436106100915760003560e01c806352d1902d1161005957806352d1902d14610168578063715018a61461018b5780638da5cb5b146101a0578063cf9e5fb2146101be578063f2fde38b146101de57600080fd5b806314b630f9146100965780633659cfe6146100d357806344cb7e4f146100f5578063485cc955146101355780634f1ef28614610155575b600080fd5b3480156100a257600080fd5b5060c9546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100f36100ee366004610fac565b6101fe565b005b34801561010157600080fd5b50610115610110366004611012565b6102d0565b604080516001600160a01b039384168152929091166020830152016100ca565b34801561014157600080fd5b506100f36101503660046110f0565b61069a565b6100f361016336600461113f565b610891565b34801561017457600080fd5b5061017d61094b565b6040519081526020016100ca565b34801561019757600080fd5b506100f36109f9565b3480156101ac57600080fd5b506033546001600160a01b03166100b6565b3480156101ca57600080fd5b5060ca546100b6906001600160a01b031681565b3480156101ea57600080fd5b506100f36101f9366004610fac565b610a0d565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156102505760405162461bcd60e51b815260040161024790611203565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610282610a83565b6001600160a01b0316146102a85760405162461bcd60e51b81526004016102479061124f565b6102b181610a9f565b604080516000808252602082019092526102cd91839190610aa7565b50565b60ca5460405163088d827f60e31b815260009182916001600160a01b039091169063446c13f89061030790879087906004016112c4565b6020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906112d8565b90506001600160a01b0381166103a25760405162461bcd60e51b815260206004820152601b60248201527f7368616d616e416464726573733a207a65726f206164647265737300000000006044820152606401610247565b60006103af88600161130b565b67ffffffffffffffff8111156103c7576103c7611129565b6040519080825280602002602001820160405280156103fa57816020015b60608152602001906001900390816103e55790505b50905060005b888110156104925789898281811061041a5761041a611323565b905060200281019061042c9190611339565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508451859250849150811061047457610474611323565b6020026020010181905250808061048a90611380565b915050610400565b506040805160018082528183019092526000916020808301908036833701905050905082816000815181106104c9576104c9611323565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060078160008151811061051b5761051b611323565b6020908102919091010152604051630f656a2160e01b90610542908490849060240161139b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152835184906105849060019061141f565b8151811061059457610594611323565b602002602001018190525060c960009054906101000a90046001600160a01b03166001600160a01b031663209f36958e8e868d8d6040518663ffffffff1660e01b81526004016105e895949392919061148e565b6020604051808303816000875af1158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b91906112d8565b604051632b3ee5f560e01b81526001600160a01b03808316600483015291965090851690632b3ee5f590602401600060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050505050509850989650505050505050565b600054610100900460ff16158080156106ba5750600054600160ff909116105b806106d45750303b1580156106d4575060005460ff166001145b6107375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610247565b6000805460ff19166001179055801561075a576000805461ff0019166101001790555b6001600160a01b0383166107b05760405162461bcd60e51b815260206004820152601a60248201527f6261616c53756d6d6f6e65723a207a65726f20616464726573730000000000006044820152606401610247565b6001600160a01b0382166108065760405162461bcd60e51b815260206004820152601c60248201527f7368616d616e53756d6d6f6e65723a207a65726f2061646472657373000000006044820152606401610247565b61080e610c12565b610816610c41565b60c980546001600160a01b038086166001600160a01b03199283161790925560ca805492851692909116919091179055801561088c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108da5760405162461bcd60e51b815260040161024790611203565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661090c610a83565b6001600160a01b0316146109325760405162461bcd60e51b81526004016102479061124f565b61093b82610a9f565b61094782826001610aa7565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e65760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610247565b506000805160206115a583398151915290565b610a01610c68565b610a0b6000610cc2565b565b610a15610c68565b6001600160a01b038116610a7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610247565b6102cd81610cc2565b6000805160206115a5833981519152546001600160a01b031690565b6102cd610c68565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ada5761088c83610d14565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b34575060408051601f3d908101601f19168201909252610b3191810190611511565b60015b610b975760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610247565b6000805160206115a58339815191528114610c065760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610247565b5061088c838383610db0565b600054610100900460ff16610c395760405162461bcd60e51b81526004016102479061152a565b610a0b610ddb565b600054610100900460ff16610a0b5760405162461bcd60e51b81526004016102479061152a565b6033546001600160a01b03163314610a0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610247565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b610d815760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610247565b6000805160206115a583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610db983610e0b565b600082511180610dc65750805b1561088c57610dd58383610e4b565b50505050565b600054610100900460ff16610e025760405162461bcd60e51b81526004016102479061152a565b610a0b33610cc2565b610e1481610d14565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610e7083836040518060600160405280602781526020016115c560279139610e77565b9392505050565b6060600080856001600160a01b031685604051610e949190611575565b600060405180830381855af49150503d8060008114610ecf576040519150601f19603f3d011682016040523d82523d6000602084013e610ed4565b606091505b5091509150610ee586838387610eef565b9695505050505050565b60608315610f5b578251610f54576001600160a01b0385163b610f545760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610247565b5081610f65565b610f658383610f6d565b949350505050565b815115610f7d5781518083602001fd5b8060405162461bcd60e51b81526004016102479190611591565b6001600160a01b03811681146102cd57600080fd5b600060208284031215610fbe57600080fd5b8135610e7081610f97565b60008083601f840112610fdb57600080fd5b50813567ffffffffffffffff811115610ff357600080fd5b60208301915083602082850101111561100b57600080fd5b9250929050565b60008060008060008060008060a0898b03121561102e57600080fd5b883567ffffffffffffffff8082111561104657600080fd5b6110528c838d01610fc9565b909a50985060208b013591508082111561106b57600080fd5b818b0191508b601f83011261107f57600080fd5b81358181111561108e57600080fd5b8c60208260051b85010111156110a357600080fd5b6020830198508097505060408b0135955060608b0135945060808b01359150808211156110cf57600080fd5b506110dc8b828c01610fc9565b999c989b5096995094979396929594505050565b6000806040838503121561110357600080fd5b823561110e81610f97565b9150602083013561111e81610f97565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561115257600080fd5b823561115d81610f97565b9150602083013567ffffffffffffffff8082111561117a57600080fd5b818501915085601f83011261118e57600080fd5b8135818111156111a0576111a0611129565b604051601f8201601f19908116603f011681019083821181831017156111c8576111c8611129565b816040528281528860208487010111156111e157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610f6560208301848661129b565b6000602082840312156112ea57600080fd5b8151610e7081610f97565b634e487b7160e01b600052601160045260246000fd5b6000821982111561131e5761131e6112f5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261135057600080fd5b83018035915067ffffffffffffffff82111561136b57600080fd5b60200191503681900382131561100b57600080fd5b6000600019821415611394576113946112f5565b5060010190565b604080825283519082018190526000906020906060840190828701845b828110156113dd5781516001600160a01b0316845292840192908401906001016113b8565b5050508381038285015284518082528583019183019060005b81811015611412578351835292840192918401916001016113f6565b5090979650505050505050565b600082821015611431576114316112f5565b500390565b60005b83811015611451578181015183820152602001611439565b83811115610dd55750506000910152565b6000815180845261147a816020860160208601611436565b601f01601f19169290920160200192915050565b6080815260006114a260808301878961129b565b6020838203818501528187518084528284019150828160051b850101838a0160005b838110156114f257601f198784030185526114e0838351611462565b948601949250908501906001016114c4565b5050604087019890985250505050606090910191909152509392505050565b60006020828403121561152357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611587818460208701611436565b9190910192915050565b602081526000610e70602083018461146256fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122031456fd6eb05721f3314be78ce960e3773ac1df2b7a401b50055d63dec4759db64736f6c634300080c0033";

type DeVoxBaalAndShamanSummonerV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeVoxBaalAndShamanSummonerV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeVoxBaalAndShamanSummonerV1__factory extends ContractFactory {
  constructor(...args: DeVoxBaalAndShamanSummonerV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeVoxBaalAndShamanSummonerV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<DeVoxBaalAndShamanSummonerV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeVoxBaalAndShamanSummonerV1 {
    return super.attach(address) as DeVoxBaalAndShamanSummonerV1;
  }
  override connect(signer: Signer): DeVoxBaalAndShamanSummonerV1__factory {
    return super.connect(signer) as DeVoxBaalAndShamanSummonerV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeVoxBaalAndShamanSummonerV1Interface {
    return new utils.Interface(_abi) as DeVoxBaalAndShamanSummonerV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeVoxBaalAndShamanSummonerV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeVoxBaalAndShamanSummonerV1;
  }
}
