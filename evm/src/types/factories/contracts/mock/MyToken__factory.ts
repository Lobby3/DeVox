/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/mock/MyToken";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f6f38038062001f6f833981810160405281019062000037919062000527565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000437565b508060049080519060200190620000d492919062000437565b505050620000f7620000eb6200011060201b60201c565b6200011860201b60201c565b620001093382620001de60201b60201c565b506200076d565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001ee6200020460201b60201c565b6200020082826200029560201b60201c565b5050565b620002146200011060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200023a6200040360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000293576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028a90620005ba565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000308576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ff906200062c565b60405180910390fd5b6200031c600083836200042d60201b60201c565b80600260008282546200033091906200067d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003e39190620006eb565b60405180910390a3620003ff600083836200043260201b60201c565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b505050565b505050565b828054620004459062000737565b90600052602060002090601f016020900481019282620004695760008555620004b5565b82601f106200048457805160ff1916838001178555620004b5565b82800160010185558215620004b5579182015b82811115620004b457825182559160200191906001019062000497565b5b509050620004c49190620004c8565b5090565b5b80821115620004e3576000816000905550600101620004c9565b5090565b600080fd5b6000819050919050565b6200050181620004ec565b81146200050d57600080fd5b50565b6000815190506200052181620004f6565b92915050565b60006020828403121562000540576200053f620004e7565b5b6000620005508482850162000510565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620005a260208362000559565b9150620005af826200056a565b602082019050919050565b60006020820190508181036000830152620005d58162000593565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000614601f8362000559565b91506200062182620005dc565b602082019050919050565b60006020820190508181036000830152620006478162000605565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200068a82620004ec565b91506200069783620004ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006cf57620006ce6200064e565b5b828201905092915050565b620006e581620004ec565b82525050565b6000602082019050620007026000830184620006da565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200075057607f821691505b6020821081141562000767576200076662000708565b5b50919050565b6117f2806200077d6000396000f3fe608060405234801561001057600080fd5b50600436106100d55760003560e01c806370a082311161008757806370a08231146101e0578063715018a6146102105780638da5cb5b1461021a57806395d89b4114610238578063a457c2d714610256578063a9059cbb14610286578063dd62ed3e146102b6578063f2fde38b146102e6576100d5565b806306fdde03146100da578063095ea7b3146100f857806318160ddd1461012857806323b872dd14610146578063313ce56714610176578063395093511461019457806340c10f19146101c4575b600080fd5b6100e2610302565b6040516100ef9190610f18565b60405180910390f35b610112600480360381019061010d9190610fd3565b610394565b60405161011f919061102e565b60405180910390f35b6101306103b7565b60405161013d9190611058565b60405180910390f35b610160600480360381019061015b9190611073565b6103c1565b60405161016d919061102e565b60405180910390f35b61017e6103f0565b60405161018b91906110e2565b60405180910390f35b6101ae60048036038101906101a99190610fd3565b6103f9565b6040516101bb919061102e565b60405180910390f35b6101de60048036038101906101d99190610fd3565b610430565b005b6101fa60048036038101906101f591906110fd565b610446565b6040516102079190611058565b60405180910390f35b61021861048e565b005b6102226104a2565b60405161022f9190611139565b60405180910390f35b6102406104cc565b60405161024d9190610f18565b60405180910390f35b610270600480360381019061026b9190610fd3565b61055e565b60405161027d919061102e565b60405180910390f35b6102a0600480360381019061029b9190610fd3565b6105d5565b6040516102ad919061102e565b60405180910390f35b6102d060048036038101906102cb9190611154565b6105f8565b6040516102dd9190611058565b60405180910390f35b61030060048036038101906102fb91906110fd565b61067f565b005b606060038054610311906111c3565b80601f016020809104026020016040519081016040528092919081815260200182805461033d906111c3565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b60008061039f610703565b90506103ac81858561070b565b600191505092915050565b6000600254905090565b6000806103cc610703565b90506103d98582856108d6565b6103e4858585610962565b60019150509392505050565b60006012905090565b600080610404610703565b905061042581858561041685896105f8565b6104209190611224565b61070b565b600191505092915050565b610438610bda565b6104428282610c58565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610496610bda565b6104a06000610daf565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104db906111c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906111c3565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b5050505050905090565b600080610569610703565b9050600061057782866105f8565b9050838110156105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b3906112ec565b60405180910390fd5b6105c9828686840361070b565b60019250505092915050565b6000806105e0610703565b90506105ed818585610962565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610687610bda565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee9061137e565b60405180910390fd5b61070081610daf565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077290611410565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e2906114a2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108c99190611058565b60405180910390a3505050565b60006108e284846105f8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461095c578181101561094e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109459061150e565b60405180910390fd5b61095b848484840361070b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c9906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3990611632565b60405180910390fd5b610a4d838383610e75565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca906116c4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bc19190611058565b60405180910390a3610bd4848484610e7a565b50505050565b610be2610703565b73ffffffffffffffffffffffffffffffffffffffff16610c006104a2565b73ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90611730565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbf9061179c565b60405180910390fd5b610cd460008383610e75565b8060026000828254610ce69190611224565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d979190611058565b60405180910390a3610dab60008383610e7a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb9578082015181840152602081019050610e9e565b83811115610ec8576000848401525b50505050565b6000601f19601f8301169050919050565b6000610eea82610e7f565b610ef48185610e8a565b9350610f04818560208601610e9b565b610f0d81610ece565b840191505092915050565b60006020820190508181036000830152610f328184610edf565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6a82610f3f565b9050919050565b610f7a81610f5f565b8114610f8557600080fd5b50565b600081359050610f9781610f71565b92915050565b6000819050919050565b610fb081610f9d565b8114610fbb57600080fd5b50565b600081359050610fcd81610fa7565b92915050565b60008060408385031215610fea57610fe9610f3a565b5b6000610ff885828601610f88565b925050602061100985828601610fbe565b9150509250929050565b60008115159050919050565b61102881611013565b82525050565b6000602082019050611043600083018461101f565b92915050565b61105281610f9d565b82525050565b600060208201905061106d6000830184611049565b92915050565b60008060006060848603121561108c5761108b610f3a565b5b600061109a86828701610f88565b93505060206110ab86828701610f88565b92505060406110bc86828701610fbe565b9150509250925092565b600060ff82169050919050565b6110dc816110c6565b82525050565b60006020820190506110f760008301846110d3565b92915050565b60006020828403121561111357611112610f3a565b5b600061112184828501610f88565b91505092915050565b61113381610f5f565b82525050565b600060208201905061114e600083018461112a565b92915050565b6000806040838503121561116b5761116a610f3a565b5b600061117985828601610f88565b925050602061118a85828601610f88565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111db57607f821691505b602082108114156111ef576111ee611194565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122f82610f9d565b915061123a83610f9d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561126f5761126e6111f5565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602583610e8a565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611368602683610e8a565b91506113738261130c565b604082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113fa602483610e8a565b91506114058261139e565b604082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148c602283610e8a565b915061149782611430565b604082019050919050565b600060208201905081810360008301526114bb8161147f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f8601d83610e8a565b9150611503826114c2565b602082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061158a602583610e8a565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602383610e8a565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683610e8a565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061171a602083610e8a565b9150611725826116e4565b602082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611786601f83610e8a565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea2646970667358221220a4be83b837874e987fc1d399b7c0908dda6f4aaa1fa2518afe52b33fbfa953a664736f6c634300080c0033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyToken> {
    return super.deploy(amount, overrides || {}) as Promise<MyToken>;
  }
  override getDeployTransaction(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(amount, overrides || {});
  }
  override attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  override connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
