/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SignMessageLib,
  SignMessageLibInterface,
} from "../../../../../../../@gnosis.pm/safe-contracts/contracts/examples/libraries/SignMessage.sol/SignMessageLib";
import type { PromiseOrValue } from "../../../../../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "SignMsg",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "signMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061061e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a1028c41461003b57806385a5affe1461006b575b600080fd5b61005560048036038101906100509190610380565b610087565b60405161006291906103e2565b60405180910390f35b6100856004803603810190610080919061045d565b61018a565b005b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016100c79291906104aa565b604051602081830303815290604052805190602001209050601960f81b600160f81b3073ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015891906104ff565b8360405160200161016c949392919061059a565b60405160208183030381529060405280519060200120915050919050565b60006101d983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610087565b905060016007600083815260200190815260200160002081905550807fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e460405160405180910390a2505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61028d82610244565b810181811067ffffffffffffffff821117156102ac576102ab610255565b5b80604052505050565b60006102bf610226565b90506102cb8282610284565b919050565b600067ffffffffffffffff8211156102eb576102ea610255565b5b6102f482610244565b9050602081019050919050565b82818337600083830152505050565b600061032361031e846102d0565b6102b5565b90508281526020810184848401111561033f5761033e61023f565b5b61034a848285610301565b509392505050565b600082601f8301126103675761036661023a565b5b8135610377848260208601610310565b91505092915050565b60006020828403121561039657610395610230565b5b600082013567ffffffffffffffff8111156103b4576103b3610235565b5b6103c084828501610352565b91505092915050565b6000819050919050565b6103dc816103c9565b82525050565b60006020820190506103f760008301846103d3565b92915050565b600080fd5b600080fd5b60008083601f84011261041d5761041c61023a565b5b8235905067ffffffffffffffff81111561043a576104396103fd565b5b60208301915083600182028301111561045657610455610402565b5b9250929050565b6000806020838503121561047457610473610230565b5b600083013567ffffffffffffffff81111561049257610491610235565b5b61049e85828601610407565b92509250509250929050565b60006040820190506104bf60008301856103d3565b6104cc60208301846103d3565b9392505050565b6104dc816103c9565b81146104e757600080fd5b50565b6000815190506104f9816104d3565b92915050565b60006020828403121561051557610514610230565b5b6000610523848285016104ea565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61057361056e8261052c565b610558565b82525050565b6000819050919050565b61059461058f826103c9565b610579565b82525050565b60006105a68287610562565b6001820191506105b68286610562565b6001820191506105c68285610583565b6020820191506105d68284610583565b6020820191508190509594505050505056fea2646970667358221220a70827ec5c46c668fd1cbeb9a378ea53916c3e53754f2b54e7227ed66d7e1c9d64736f6c634300080c0033";

type SignMessageLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignMessageLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignMessageLib__factory extends ContractFactory {
  constructor(...args: SignMessageLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SignMessageLib> {
    return super.deploy(overrides || {}) as Promise<SignMessageLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignMessageLib {
    return super.attach(address) as SignMessageLib;
  }
  override connect(signer: Signer): SignMessageLib__factory {
    return super.connect(signer) as SignMessageLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignMessageLibInterface {
    return new utils.Interface(_abi) as SignMessageLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignMessageLib {
    return new Contract(address, _abi, signerOrProvider) as SignMessageLib;
  }
}
