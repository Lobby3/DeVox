/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  CompatibilityFallbackHandler,
  CompatibilityFallbackHandlerInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/handler/CompatibilityFallbackHandler";
import type { PromiseOrValue } from "../../../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract GnosisSafe",
        name: "safe",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "getMessageHashForSafe",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModules",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "calldataPayload",
        type: "bytes",
      },
    ],
    name: "simulate",
    outputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611951806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80636ac247841161007c5780636ac24784146101cf578063a3f4df7e146101ff578063b2494df31461021d578063bc197c811461023b578063bd61951d1461026b578063f23a6e611461029b578063ffa1ad74146102cb576100be565b806223de29146100c357806301ffc9a7146100df5780630a1028c41461010f578063150b7a021461013f5780631626ba7e1461016f57806320c13b0b1461019f575b600080fd5b6100dd60048036038101906100d89190610ac4565b6102e9565b005b6100f960048036038101906100f49190610beb565b6102f3565b6040516101069190610c33565b60405180910390f35b61012960048036038101906101249190610d8f565b61042d565b6040516101369190610df1565b60405180910390f35b61015960048036038101906101549190610e0c565b610440565b6040516101669190610ea3565b60405180910390f35b61018960048036038101906101849190610eea565b610455565b6040516101969190610ea3565b60405180910390f35b6101b960048036038101906101b49190610f4a565b610566565b6040516101c69190610ea3565b60405180910390f35b6101e960048036038101906101e4919061101b565b610712565b6040516101f69190610df1565b60405180910390f35b610207610816565b60405161021491906110ff565b60405180910390f35b61022561084f565b60405161023291906111df565b60405180910390f35b61025560048036038101906102509190611257565b6108e6565b6040516102629190610ea3565b60405180910390f35b61028560048036038101906102809190611333565b6108fe565b60405161029291906113e8565b60405180910390f35b6102b560048036038101906102b0919061140a565b610968565b6040516102c29190610ea3565b60405180910390f35b6102d361097e565b6040516102e091906110ff565b60405180910390f35b5050505050505050565b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061042657507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60006104393383610712565b9050919050565b600063150b7a0260e01b905095945050505050565b60008033905060008173ffffffffffffffffffffffffffffffffffffffff166320c13b0b8760405160200161048a9190610df1565b60405160208183030381529060405287876040518463ffffffff1660e01b81526004016104b9939291906114d1565b602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa919061151f565b90506320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461055257600060e01b61055b565b631626ba7e60e01b5b925050509392505050565b60008033905060006105bc8288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610712565b9050600085859050141561068c5760008273ffffffffffffffffffffffffffffffffffffffff16635ae6bd37836040518263ffffffff1660e01b81526004016106059190610df1565b602060405180830381865afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611561565b1415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e906115da565b60405180910390fd5b6106fe565b8173ffffffffffffffffffffffffffffffffffffffff1663934f3a1182898989896040518663ffffffff1660e01b81526004016106cd9594939291906115fa565b60006040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050505b6320c13b0b60e01b92505050949350505050565b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b8380519060200120604051602001610752929190611643565b604051602081830303815290604052805190602001209050601960f81b600160f81b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190611681565b836040516020016107f7949392919061171c565b6040516020818303038152906040528051906020012091505092915050565b6040518060400160405280601881526020017f44656661756c742043616c6c6261636b2048616e646c6572000000000000000081525081565b6060600033905060008173ffffffffffffffffffffffffffffffffffffffff1663cc2f84526001600a6040518363ffffffff1660e01b81526004016108959291906117be565b600060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108db91906118bf565b509050809250505090565b600063bc197c8160e01b905098975050505050505050565b60606040517fb4faba09000000000000000000000000000000000000000000000000000000008152600436036004808301376020600036836000335af15060203d036040519250808301604052806020843e60005161095f57825160208401fd5b50509392505050565b600063f23a6e6160e01b90509695505050505050565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f6826109cb565b9050919050565b610a06816109eb565b8114610a1157600080fd5b50565b600081359050610a23816109fd565b92915050565b6000819050919050565b610a3c81610a29565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a8457610a83610a5f565b5b8235905067ffffffffffffffff811115610aa157610aa0610a64565b5b602083019150836001820283011115610abd57610abc610a69565b5b9250929050565b60008060008060008060008060c0898b031215610ae457610ae36109c1565b5b6000610af28b828c01610a14565b9850506020610b038b828c01610a14565b9750506040610b148b828c01610a14565b9650506060610b258b828c01610a4a565b955050608089013567ffffffffffffffff811115610b4657610b456109c6565b5b610b528b828c01610a6e565b945094505060a089013567ffffffffffffffff811115610b7557610b746109c6565b5b610b818b828c01610a6e565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bc881610b93565b8114610bd357600080fd5b50565b600081359050610be581610bbf565b92915050565b600060208284031215610c0157610c006109c1565b5b6000610c0f84828501610bd6565b91505092915050565b60008115159050919050565b610c2d81610c18565b82525050565b6000602082019050610c486000830184610c24565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9c82610c53565b810181811067ffffffffffffffff82111715610cbb57610cba610c64565b5b80604052505050565b6000610cce6109b7565b9050610cda8282610c93565b919050565b600067ffffffffffffffff821115610cfa57610cf9610c64565b5b610d0382610c53565b9050602081019050919050565b82818337600083830152505050565b6000610d32610d2d84610cdf565b610cc4565b905082815260208101848484011115610d4e57610d4d610c4e565b5b610d59848285610d10565b509392505050565b600082601f830112610d7657610d75610a5f565b5b8135610d86848260208601610d1f565b91505092915050565b600060208284031215610da557610da46109c1565b5b600082013567ffffffffffffffff811115610dc357610dc26109c6565b5b610dcf84828501610d61565b91505092915050565b6000819050919050565b610deb81610dd8565b82525050565b6000602082019050610e066000830184610de2565b92915050565b600080600080600060808688031215610e2857610e276109c1565b5b6000610e3688828901610a14565b9550506020610e4788828901610a14565b9450506040610e5888828901610a4a565b935050606086013567ffffffffffffffff811115610e7957610e786109c6565b5b610e8588828901610a6e565b92509250509295509295909350565b610e9d81610b93565b82525050565b6000602082019050610eb86000830184610e94565b92915050565b610ec781610dd8565b8114610ed257600080fd5b50565b600081359050610ee481610ebe565b92915050565b600080600060408486031215610f0357610f026109c1565b5b6000610f1186828701610ed5565b935050602084013567ffffffffffffffff811115610f3257610f316109c6565b5b610f3e86828701610a6e565b92509250509250925092565b60008060008060408587031215610f6457610f636109c1565b5b600085013567ffffffffffffffff811115610f8257610f816109c6565b5b610f8e87828801610a6e565b9450945050602085013567ffffffffffffffff811115610fb157610fb06109c6565b5b610fbd87828801610a6e565b925092505092959194509250565b6000610fd6826109cb565b9050919050565b6000610fe882610fcb565b9050919050565b610ff881610fdd565b811461100357600080fd5b50565b60008135905061101581610fef565b92915050565b60008060408385031215611032576110316109c1565b5b600061104085828601611006565b925050602083013567ffffffffffffffff811115611061576110606109c6565b5b61106d85828601610d61565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b1578082015181840152602081019050611096565b838111156110c0576000848401525b50505050565b60006110d182611077565b6110db8185611082565b93506110eb818560208601611093565b6110f481610c53565b840191505092915050565b6000602082019050818103600083015261111981846110c6565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611156816109eb565b82525050565b6000611168838361114d565b60208301905092915050565b6000602082019050919050565b600061118c82611121565b611196818561112c565b93506111a18361113d565b8060005b838110156111d25781516111b9888261115c565b97506111c483611174565b9250506001810190506111a5565b5085935050505092915050565b600060208201905081810360008301526111f98184611181565b905092915050565b60008083601f84011261121757611216610a5f565b5b8235905067ffffffffffffffff81111561123457611233610a64565b5b6020830191508360208202830111156112505761124f610a69565b5b9250929050565b60008060008060008060008060a0898b031215611277576112766109c1565b5b60006112858b828c01610a14565b98505060206112968b828c01610a14565b975050604089013567ffffffffffffffff8111156112b7576112b66109c6565b5b6112c38b828c01611201565b9650965050606089013567ffffffffffffffff8111156112e6576112e56109c6565b5b6112f28b828c01611201565b9450945050608089013567ffffffffffffffff811115611315576113146109c6565b5b6113218b828c01610a6e565b92509250509295985092959890939650565b60008060006040848603121561134c5761134b6109c1565b5b600061135a86828701610a14565b935050602084013567ffffffffffffffff81111561137b5761137a6109c6565b5b61138786828701610a6e565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60006113ba82611393565b6113c4818561139e565b93506113d4818560208601611093565b6113dd81610c53565b840191505092915050565b6000602082019050818103600083015261140281846113af565b905092915050565b60008060008060008060a08789031215611427576114266109c1565b5b600061143589828a01610a14565b965050602061144689828a01610a14565b955050604061145789828a01610a4a565b945050606061146889828a01610a4a565b935050608087013567ffffffffffffffff811115611489576114886109c6565b5b61149589828a01610a6e565b92509250509295509295509295565b60006114b0838561139e565b93506114bd838584610d10565b6114c683610c53565b840190509392505050565b600060408201905081810360008301526114eb81866113af565b905081810360208301526115008184866114a4565b9050949350505050565b60008151905061151981610bbf565b92915050565b600060208284031215611535576115346109c1565b5b60006115438482850161150a565b91505092915050565b60008151905061155b81610a33565b92915050565b600060208284031215611577576115766109c1565b5b60006115858482850161154c565b91505092915050565b7f48617368206e6f7420617070726f766564000000000000000000000000000000600082015250565b60006115c4601183611082565b91506115cf8261158e565b602082019050919050565b600060208201905081810360008301526115f3816115b7565b9050919050565b600060608201905061160f6000830188610de2565b81810360208301526116228186886114a4565b905081810360408301526116378184866114a4565b90509695505050505050565b60006040820190506116586000830185610de2565b6116656020830184610de2565b9392505050565b60008151905061167b81610ebe565b92915050565b600060208284031215611697576116966109c1565b5b60006116a58482850161166c565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6116f56116f0826116ae565b6116da565b82525050565b6000819050919050565b61171661171182610dd8565b6116fb565b82525050565b600061172882876116e4565b60018201915061173882866116e4565b6001820191506117488285611705565b6020820191506117588284611705565b60208201915081905095945050505050565b611773816109eb565b82525050565b6000819050919050565b6000819050919050565b60006117a86117a361179e84611779565b611783565b610a29565b9050919050565b6117b88161178d565b82525050565b60006040820190506117d3600083018561176a565b6117e060208301846117af565b9392505050565b600067ffffffffffffffff82111561180257611801610c64565b5b602082029050602081019050919050565b600081519050611822816109fd565b92915050565b600061183b611836846117e7565b610cc4565b9050808382526020820190506020840283018581111561185e5761185d610a69565b5b835b8181101561188757806118738882611813565b845260208401935050602081019050611860565b5050509392505050565b600082601f8301126118a6576118a5610a5f565b5b81516118b6848260208601611828565b91505092915050565b600080604083850312156118d6576118d56109c1565b5b600083015167ffffffffffffffff8111156118f4576118f36109c6565b5b61190085828601611891565b925050602061191185828601611813565b915050925092905056fea26469706673582212206c2807c8275e3c7f5182bdd428342c52a231495cfba49b6198b541a6fbfb77e764736f6c634300080c0033";

type CompatibilityFallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompatibilityFallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompatibilityFallbackHandler__factory extends ContractFactory {
  constructor(...args: CompatibilityFallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompatibilityFallbackHandler> {
    return super.deploy(
      overrides || {}
    ) as Promise<CompatibilityFallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CompatibilityFallbackHandler {
    return super.attach(address) as CompatibilityFallbackHandler;
  }
  override connect(signer: Signer): CompatibilityFallbackHandler__factory {
    return super.connect(signer) as CompatibilityFallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompatibilityFallbackHandlerInterface {
    return new utils.Interface(_abi) as CompatibilityFallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompatibilityFallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompatibilityFallbackHandler;
  }
}
